<?xml version="1.0" encoding="UTF-8"?>
<project name="mpower" basedir=".." default="usage">

	<property file="${basedir}/build/build.properties" />
	<property file="${commonBuild.dir}/commonBuild.properties"/>

	<import file="${commonBuild.dir}/ivyBuild.xml"/>

	<taskdef resource="net/sf/antcontrib/antcontrib.properties">
		<classpath>
			<pathelement location="${antcontrib.jar}" />
		</classpath>
	</taskdef>

	<target name="build">
		<antcall target="build-integrated-war" />
	</target>

	<target name="setup" depends="clean-build, resolve">
		<echo>Setting up for environment = ${build.env}</echo>
		<mkdir dir="${stage.dir}" />
		<if>
			<equals arg1="${build.env}" arg2="dev" />
			<then>
				<property name="debug.compile" value="true" />
			</then>
			<elseif>
				<equals arg1="${build.env}" arg2="unit-test" />
				<then>
					<property name="debug.compile" value="true" />
				</then>
			</elseif>
			<else>
				<property name="debug.compile" value="false" />
			</else>
		</if>
	</target>

	<target name="classes-jar" depends="setup">
		<mkdir dir="${classes.dir}" />

		<echo>Compiling with debug=${debug.compile}</echo>
		<javac destdir="${stage.dir}/classes-jar" srcdir="${src.dir}" 
			debug="${debug.compile}" classpathref="compile.path"/> <!-- compile.path is set in ivyBuild.xml -->

		<copy todir="${classes.dir}">
			<fileset dir="${src.dir}">
				<include name="**/*.*" />
				<exclude name="**/*.java" />
				<exclude name="META-INF/persistence-container.xml"/>
			</fileset>
			<fileset dir="${config.dir}">
				<include name="**/*.properties" />
				<include name="**/*.xml" />
				<include name="**/*.drl" />
				<include name="**/*.dslr" />
				<include name="**/*.dsl" />
			</fileset>
		</copy>

		<if>
			<equals arg1="${build.env}" arg2="dev" casesensitive="false" />
			<then>
				<copy tofile="${classes.dir}/META-INF/persistence.xml">
					<fileset dir="${src.dir}">
						<include name="META-INF/persistence-container.xml" />
					</fileset>
				</copy>
				<replace file="${classes.dir}/META-INF/persistence.xml"
					token="@@DIALECT@@" value="${mysql.db.dialect}"/>
			</then>
			<elseif>
				<equals arg1="${build.env}" arg2="unit-test" casesensitive="false" />
				<then>
					<!-- We have a special file for unit tests -->
					<copy todir="${classes.dir}">
						<fileset dir="${test.src.dir}">
							<include name="META-INF/persistence.xml"/>
						</fileset>
					</copy>

				</then>
			</elseif>
			<else>
				<copy tofile="${classes.dir}/META-INF/persistence.xml">
					<fileset dir="${src.dir}">
						<include name="META-INF/persistence-container.xml" />
					</fileset>
				</copy>
				<replace file="${classes.dir}/META-INF/persistence.xml"
					token="@@DIALECT@@" value="${sqlserver.db.dialect}"/>
			</else>
		</if>

		<jar jarfile="${stage.dir}/${app.name}.jar" basedir="${classes.dir}">
			<include name="**/*.class" />
			<include name="**/*.properties" />
			<include name="**/*.xml" />
			<include name="**/*.drl" />
			<include name="**/*.dslr" />
			<include name="**/*.dsl" />
			<include name="META-INF/**" />
			<exclude name="**/test/**/*.class" />
		</jar>
		<!--<delete dir="${classes.dir}" />-->
	</target>

	<target name="setup-war" depends="classes-jar">
		<mkdir dir="${stage.dir}/war" />
		<mkdir dir="${stage.dir}/war/META-INF" />
		<mkdir dir="${stage.dir}/war/WEB-INF" />
		<mkdir dir="${stage.dir}/war/WEB-INF/lib" />
		<mkdir dir="${stage.dir}/war/WEB-INF/classes" />

		<copy todir="${stage.dir}/war" includeemptydirs="true">
			<fileset dir="${war.dir}">
				<include name="**/*.*" />
			</fileset>
		</copy>

		<copy todir="${stage.dir}/war/WEB-INF/lib">
			<fileset dir="${stage.dir}">
				<include name="${app.name}.jar" />
			</fileset>
		</copy>

		<copy todir="${stage.dir}/war/WEB-INF/lib" flatten="true">
		    <path>
				<pathelement path="${war.lib}"/> <!-- war.lib from ivyBuild.xml -->
		    </path>
		</copy>
	</target>

	<target name="build-integrated-war" depends="setup-war">
		<war destfile="${stage.dir}/${app.name}.war" basedir="${stage.dir}/war">
			<include name="**/*.*" />
		</war>
		<delete dir="${stage.dir}/war" />
	</target>

	<target name="build-exploded-war" depends="setup-war">
		<mkdir dir="${stage.dir}/${app.name}.war" />
		<copy todir="${stage.dir}/${app.name}.war">
			<fileset dir="${stage.dir}/war">
				<include name="**/*.*" />
			</fileset>
		</copy>
		<delete dir="${stage.dir}/war" />
	</target>

	<target name="deploy-integrated-war" depends="build-integrated-war">
		<copy todir="${deploy.path}" file="${stage.dir}/${app.name}.war" />
	</target>

	<target name="deploy-exploded-war" depends="build-exploded-war">
		<copy todir="${deploy.path}/${app.name}">
			<fileset dir="${stage.dir}/${app.name}.war" />
		</copy>
		<delete dir="${stage.dir}/${app.name}.war" quiet="true" />
	</target>

	<target name="undeploy-war">
		<delete dir="${deploy.path}/${app.name}.war" />
		<delete dir="${deploy.path}/${app.name}" />
		<delete>
			<fileset dir="${deploy.path}" includes="${app.name}.war" />
			<fileset dir="${deploy.path}" includes="${app.name}" />
		</delete>
	</target>

	<target name="generate-javadocs">
		<mkdir dir="${stage.dir}/javadocs" />

		<path id="compile-lib">
			<fileset refid="compile.path" /> <!-- compile.path from ivyBuild.xml -->
			<fileset refid="war.path" /> <!-- war.path from ivyBuild.xml -->
		</path>

		<javadoc packagenames="com.mpower.*" destdir="${stage.dir}/javadocs" classpathref="compile-lib" useexternalfile="true">
			<fileset dir="${src.dir}">
				<include name="**/*.java" />
			</fileset>
		</javadoc>
	</target>

	<target name="app.synch">
		<echo>Synchronizing App</echo>
		<sync todir="${deploy.path}/${app.name}/css">
			<fileset dir="${war.dir}/css">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${app.name}/js">
			<fileset dir="${war.dir}/js">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${app.name}/images">
			<fileset dir="${war.dir}/images">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<sync todir="${deploy.path}/${app.name}/WEB-INF/jsp">
			<fileset dir="${war.dir}/WEB-INF/jsp">
				<include name="**/*.*"/>
			</fileset>
		</sync>
		<copy todir="${deploy.path}/${app.name}">
			<fileset dir="${war.dir}">
				<include name="*.jsp"/>
			</fileset>
		</copy>
	</target>

	<target name="usage">
		<echo>This is the internal build file for MPowerOpen.</echo>
		<echo>Please use build.xml</echo>
	</target>

</project>
