package com.mpower.domain

import com.mpower.service.GiftService;
import com.mpower.domain.Gift;
import com.mpower.service.PersonService;
import com.mpower.domain.Person;
import java.util.Date;
import com.mpower.service.rule.DummyPersonDonation;
import java.util.Calendar;
import java.math.BigDecimal;

global org.springframework.context.ApplicationContext applicationContext;

expander Site1Language.dsl

rule "Gift - Donation Made"
	when
		A gift has been donated
	then
		Find the person who donated that gift
end

rule "Gift - Donation Made - Step 2"
	when
		A gift has been donated
		The person who donated that gift has been found
	then
		Get the dollar value of the persons total donations over the past 12 "months"	
		Setup the person donation object
end

rule "Gift - Donation Made - Step 3"
	when 
		A gift has been donated
		The person who donated that gift has been found
		The person donation object exists
		The person has donated at least 5000 dollars over the time period
	then
		Flag the person as a major donor
end

rule "Lapsed Donor"
	when
		#There is a person
		>$person : Person()
		#Who has not donated a gift over a certain period of time
	then
		Flag the person as a lapsed donor
end



function Date getCurrentDate() {
	Calendar cal = Calendar.getInstance();
	return cal.getTime();
}

function Date getBeginningOfYearDate() {
	Calendar cal = Calendar.getInstance();
	cal.set(Calendar.YEAR, 0, 0, 0, 0, 0);
	return cal.getTime();
}

function Date getBeginDate(int number, String timeUnit) {
	Calendar cal = Calendar.getInstance();
	StringBuilder args = new StringBuilder(timeUnit.toUpperCase());
	if (args.toString().equals("MONTHS") || args.toString().equals("YEARS")) {
		args.deleteCharAt(args.length()-1);
	}
	if (args.toString().equals("MONTH")) {
		cal.add(Calendar.MONTH, -(number));
	}
	if (args.toString().equals("YEAR")) {
		cal.add(Calendar.YEAR, -(number));
	}
		return cal.getTime();
}
