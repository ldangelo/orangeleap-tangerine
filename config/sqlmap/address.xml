<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="ADDRESS">

    <resultMap id="ADDRESS_RESULT" class="com.orangeleap.tangerine.domain.communication.Address">
        <result property="id" column="ADDRESS_ID" jdbcType="BIGINT"/>
        <result property="activationStatus" column="ADDRESS_ACTIVATION_STATUS" jdbcType="VARCHAR"/>
        <result property="addressLine1" column="ADDRESS_LINE_1" jdbcType="VARCHAR"/>
        <result property="addressLine2" column="ADDRESS_LINE_2" jdbcType="VARCHAR"/>
        <result property="addressLine3" column="ADDRESS_LINE_3" jdbcType="VARCHAR"/>
        <result property="city" column="ADDRESS_CITY" jdbcType="VARCHAR"/>
        <result property="comments" column="ADDRESS_COMMENT" jdbcType="VARCHAR"/>
        <result property="country" column="ADDRESS_COUNTRY" jdbcType="VARCHAR"/>
        <result property="effectiveDate" column="ADDRESS_EFFECTIVE_DATE" jdbcType="TIMESTAMP"/>
        <result property="inactive" column="ADDRESS_INACTIVE" jdbcType="CHAR"/>
        <result property="postalCode" column="ADDRESS_POSTAL_CODE" jdbcType="VARCHAR"/>
        <result property="receiveCorrespondence" column="ADDRESS_RECEIVE_CORRESPONDENCE" jdbcType="CHAR"/>
        <result property="seasonalEndDate" column="ADDRESS_SEASONAL_END_DATE" jdbcType="TIMESTAMP"/>
        <result property="seasonalStartDate" column="ADDRESS_SEASONAL_START_DATE" jdbcType="TIMESTAMP"/>
        <result property="stateProvince" column="ADDRESS_STATE_PROVINCE" jdbcType="VARCHAR"/>
        <result property="temporaryEndDate" column="ADDRESS_TEMPORARY_END_DATE" jdbcType="TIMESTAMP"/>
        <result property="temporaryStartDate" column="ADDRESS_TEMPORARY_START_DATE" jdbcType="TIMESTAMP"/>
        <result property="constituentId" column="ADDRESS_CONSTITUENT_ID" jdbcType="BIGINT"/>
        <result property="ncoaDate" column="ADDRESS_NCOA_DATE" jdbcType="TIMESTAMP"/>
        <result property="cassDate" column="ADDRESS_CASS_DATE" jdbcType="TIMESTAMP"/>
		<result property="primary" column="ADDRESS_IS_PRIMARY" jdbcType="CHAR" />
		<result property="undeliverable" column="ADDRESS_UNDELIVERABLE" jdbcType="CHAR" />
        <result property="createDate" column="ADDRESS_CREATE_DATE" jdbcType="TIMESTAMP"/>
        <result property="updateDate" column="ADDRESS_UPDATE_DATE" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="ADDRESS_LIST_RESULT" class="com.orangeleap.tangerine.domain.communication.Address" groupBy="id" extends="ADDRESS_RESULT">
        <result property="current" column="ADDRESS_CURRENT" jdbcType="CHAR" />
    </resultMap>

    <sql id="ADDRESS_COLS_FRAGMENT">
        addr.ADDRESS_ID, addr.ACTIVATION_STATUS as ADDRESS_ACTIVATION_STATUS, addr.ADDRESS_LINE_1, addr.ADDRESS_LINE_2, addr.ADDRESS_LINE_3,
        addr.CITY as ADDRESS_CITY, addr.COMMENT as ADDRESS_COMMENT, addr.COUNTRY as ADDRESS_COUNTRY, 
        addr.CREATE_DATE as ADDRESS_CREATE_DATE, addr.EFFECTIVE_DATE as ADDRESS_EFFECTIVE_DATE, addr.INACTIVE as ADDRESS_INACTIVE, 
        addr.POSTAL_CODE as ADDRESS_POSTAL_CODE, addr.RECEIVE_CORRESPONDENCE as ADDRESS_RECEIVE_CORRESPONDENCE, addr.SEASONAL_END_DATE as ADDRESS_SEASONAL_END_DATE, 
        addr.SEASONAL_START_DATE as ADDRESS_SEASONAL_START_DATE, addr.STATE_PROVINCE as ADDRESS_STATE_PROVINCE,
        addr.TEMPORARY_END_DATE as ADDRESS_TEMPORARY_END_DATE, addr.TEMPORARY_START_DATE as ADDRESS_TEMPORARY_START_DATE, 
        addr.NCOA_DATE as ADDRESS_NCOA_DATE, addr.CASS_DATE as ADDRESS_CASS_DATE,
        addr.UPDATE_DATE as ADDRESS_UPDATE_DATE, addr.CONSTITUENT_ID as ADDRESS_CONSTITUENT_ID, addr.IS_PRIMARY as ADDRESS_IS_PRIMARY,
        addr.UNDELIVERABLE as ADDRESS_UNDELIVERABLE
    </sql>

    <sql id="SELECT_ADDRESS_FRAGMENT">
        select 
        <include refid="ADDRESS_COLS_FRAGMENT"/>
        from ADDRESS addr 
        inner join CONSTITUENT p ON addr.CONSTITUENT_ID = p.CONSTITUENT_ID 
        where p.SITE_NAME = #siteName# 
    </sql>

    <select id="SELECT_ADDRESS_BY_ID" resultMap="ADDRESS_RESULT" parameterClass="map" >
        <include refid="SELECT_ADDRESS_FRAGMENT"/>
        and addr.ADDRESS_ID = #addressId#
    </select>

    <select id="SELECT_ALL_ADDRESSES_BY_CONSTITUENT_ID" resultMap="ADDRESS_RESULT" parameterClass="map" >
        <include refid="SELECT_ADDRESS_FRAGMENT"/>
        and addr.CONSTITUENT_ID = #constituentId#
        order by addr.CREATE_DATE
    </select>
	
	<select id="SELECT_ACTIVE_ADDRESSES_BY_CONSTITUENT_ID" resultMap="ADDRESS_RESULT" parameterClass="map" >
		<include refid="SELECT_ADDRESS_FRAGMENT"/>
		and addr.CONSTITUENT_ID = #constituentId#
		and addr.INACTIVE = false
		order by ADDRESS_ACTIVATION_STATUS, addr.CREATE_DATE
	</select>

    <select id="SELECT_LIMITED_ADDRESSES_BY_CONSTITUENT_ID" resultMap="ADDRESS_LIST_RESULT" parameterClass="map">
        select innerQuery.*

        <dynamic prepend=",">
        	<isNotEqual property="sortColumn" compareValue="ADDRESS_CURRENT">
                <isNotEqual property="sortColumn" compareValue="ADDRESS_INACTIVE">
                    <isNotEqual property="sortColumn" compareValue="ADDRESS_RECEIVE_CORRESPONDENCE">
                        <isNotEqual property="sortColumn" compareValue="ADDRESS_IS_PRIMARY">
                            <isNotEqual property="sortColumn" compareValue="ADDRESS_UNDELIVERABLE">
                                IF ($sortColumn$ IS NULL or $sortColumn$ = '', 1, 0) AS isnull
                            </isNotEqual>
                        </isNotEqual>
                    </isNotEqual>
                </isNotEqual>
            </isNotEqual>
        </dynamic>
        from

        (select
        <include refid="ADDRESS_COLS_FRAGMENT" />,

        CASE
          WHEN addr.ACTIVATION_STATUS = 'temporary' AND #asOfDate# BETWEEN addr.TEMPORARY_START_DATE AND addr.TEMPORARY_END_DATE THEN '1'
          WHEN addr.ACTIVATION_STATUS = 'seasonal' AND IS_IN_SEASON(#asOfDate#, addr.SEASONAL_START_DATE, addr.SEASONAL_END_DATE) = 1 THEN '1'
          WHEN addr.ACTIVATION_STATUS = 'permanent' AND addr.EFFECTIVE_DATE IS NOT NULL AND #asOfDate# &gt;= addr.EFFECTIVE_DATE THEN '1'
          ELSE '0'
        END
        as ADDRESS_CURRENT
        <dynamic prepend=",">
            <isEqual property="sortColumn" compareValue="FIELD_VALUE">
                custFld.FIELD_VALUE
            </isEqual>
        </dynamic>

        from ADDRESS addr
        inner join CONSTITUENT p ON addr.CONSTITUENT_ID = p.CONSTITUENT_ID

        <isNotNull property="entityType">
            <isNotNull property="fieldName">
                <isNotNull property="asOfDate">
                    left outer join CUSTOM_FIELD custFld on addr.ADDRESS_ID = custFld.ENTITY_ID and custFld.ENTITY_TYPE = #entityType#
                        and DATE(#asOfDate#) &gt;= custFld.START_DATE and DATE(#asOfDate#) &lt;= custFld.END_DATE
                        and custFld.FIELD_NAME = #fieldName#
                </isNotNull>
            </isNotNull>
        </isNotNull>

        where p.SITE_NAME = #siteName#
        and addr.CONSTITUENT_ID = #constituentId#) as innerQuery
        order by
        <isNotEqual property="sortColumn" compareValue="ADDRESS_CURRENT">
            <isNotEqual property="sortColumn" compareValue="ADDRESS_INACTIVE">
                <isNotEqual property="sortColumn" compareValue="ADDRESS_RECEIVE_CORRESPONDENCE">
                    <isNotEqual property="sortColumn" compareValue="ADDRESS_IS_PRIMARY">
                        <isNotEqual property="sortColumn" compareValue="ADDRESS_UNDELIVERABLE">
                            isnull ASC,
                        </isNotEqual>
                    </isNotEqual>
                </isNotEqual>
            </isNotEqual>
        </isNotEqual>
		$sortColumn$ + '0' $sortDir$, $sortColumn$ $sortDir$
        limit $offset$,$limit$
    </select>

    <select id="SELECT_ADDRESS_COUNT_BY_CONSTITUENT_ID" parameterClass="map" resultClass="int">
        select count(addr.ADDRESS_ID)
        from ADDRESS addr
        inner join CONSTITUENT p on addr.CONSTITUENT_ID = p.CONSTITUENT_ID
        where p.SITE_NAME = #siteName#
        and addr.CONSTITUENT_ID = #constituentId#
    </select>

    <insert id="INSERT_ADDRESS" parameterClass="com.orangeleap.tangerine.domain.communication.Address">
        insert into ADDRESS (ACTIVATION_STATUS, ADDRESS_LINE_1, ADDRESS_LINE_2,
        ADDRESS_LINE_3, CITY, COMMENT, COUNTRY, CREATE_DATE, EFFECTIVE_DATE, INACTIVE,
        POSTAL_CODE, RECEIVE_CORRESPONDENCE, SEASONAL_END_DATE, SEASONAL_START_DATE, STATE_PROVINCE,
        TEMPORARY_END_DATE, TEMPORARY_START_DATE, UPDATE_DATE, CONSTITUENT_ID, NCOA_DATE, CASS_DATE, IS_PRIMARY, UNDELIVERABLE)
        values (#activationStatus#, #addressLine1#,
        #addressLine2#, #addressLine3#, #city#,
        #comments#, #country#, now(), #effectiveDate#,
        #inactive#, #postalCode#, #receiveCorrespondence#,
        #seasonalEndDate#, #seasonalStartDate#, #stateProvince#,
        #temporaryEndDate#, #temporaryStartDate#, now(),
        #constituentId#, #ncoaDate#, #cassDate#, #primary#, #undeliverable#)
        <selectKey keyProperty="id" resultClass="long">
            SELECT LAST_INSERT_ID() AS value
        </selectKey>
    </insert>

    <update id="UPDATE_ADDRESS" parameterClass="com.orangeleap.tangerine.domain.communication.Address">
        update ADDRESS
        SET UPDATE_DATE = now(),
        ACTIVATION_STATUS = #activationStatus#,
        ADDRESS_LINE_1 = #addressLine1#,
        ADDRESS_LINE_2 = #addressLine2#,
        ADDRESS_LINE_3 = #addressLine3#,
        CITY = #city#,
        COMMENT = #comments#,
        COUNTRY = #country#,
        EFFECTIVE_DATE = #effectiveDate#,
        INACTIVE = #inactive#,
        POSTAL_CODE = #postalCode#,
        RECEIVE_CORRESPONDENCE = #receiveCorrespondence#,
        SEASONAL_END_DATE = #seasonalEndDate#,
        SEASONAL_START_DATE = #seasonalStartDate#,
        STATE_PROVINCE = #stateProvince#,
        TEMPORARY_END_DATE = #temporaryEndDate#,
        TEMPORARY_START_DATE = #temporaryStartDate#,
        CONSTITUENT_ID = #constituentId#,
        NCOA_DATE = #ncoaDate#, 
        CASS_DATE = #cassDate#, 
		IS_PRIMARY = #primary#,
		UNDELIVERABLE = #undeliverable#
        where ADDRESS_ID = #id#
    </update>

    <update id="INACTIVATE_ADDRESSES">
        update ADDRESS
        set INACTIVE = true
        where ACTIVATION_STATUS = 'temporary'
        and INACTIVE = false
        and TEMPORARY_END_DATE &lt;= now()
    </update>    

</sqlMap>