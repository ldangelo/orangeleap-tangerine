<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="CONSTITUENT">

	<resultMap id="CONSTITUENT_RESULT" class="com.orangeleap.tangerine.domain.Constituent" groupBy="id">
		<result property="id" column="CONSTITUENT_CONSTITUENT_ID" jdbcType="BIGINT" />
		<result property="constituentType" column="CONSTITUENT_TYPE" jdbcType="VARCHAR" />
		<result property="createDate" column="CONSTITUENT_CREATE_DATE" jdbcType="TIMESTAMP" />
		<result property="firstName" column="CONSTITUENT_FIRST_NAME" jdbcType="VARCHAR" />
		<result property="lastName" column="CONSTITUENT_LAST_NAME" jdbcType="VARCHAR" />
		<result property="legalName" column="CONSTITUENT_LEGAL_NAME" jdbcType="VARCHAR" />
		<result property="loginId" column="CONSTITUENT_LOGIN_ID" jdbcType="VARCHAR" />
		<result property="maritalStatus" column="CONSTITUENT_MARITAL_STATUS" jdbcType="VARCHAR" />
		<result property="middleName" column="CONSTITUENT_MIDDLE_NAME" jdbcType="VARCHAR" />
		<result property="naicsCode" column="CONSTITUENT_NAICS_CODE" jdbcType="VARCHAR" />
		<result property="organizationName" column="CONSTITUENT_ORGANIZATION_NAME" jdbcType="VARCHAR" />
		<result property="preferredPhoneType" column="CONSTITUENT_PREFERRED_PHONE_TYPE" jdbcType="VARCHAR" />
		<result property="recognitionName" column="CONSTITUENT_RECOGNITION_NAME" jdbcType="VARCHAR" />
		<result property="suffix" column="CONSTITUENT_SUFFIX" jdbcType="VARCHAR" />
		<result property="title" column="CONSTITUENT_TITLE" jdbcType="VARCHAR" />
		<result property="byPassDuplicateDetection" column="CONSTITUENT_BYPASS_DUPLICATE" jdbcType="CHAR" />
		<result property="recentGift" column="CONSTITUENT_RECENT_GIFT" jdbcType="CHAR" />
		<result property="updateDate" column="CONSTITUENT_UPDATE_DATE" jdbcType="TIMESTAMP" />
		<result property="accountNumber" column="CONSTITUENT_ACCOUNT_NUMBER" jdbcType="BIGINT" />
        <result property="site" resultMap="SITE.SITE_NAME_RESULT" />
	</resultMap>

    <resultMap id="CONSTITUENT_SEARCH_RESULT" class="com.orangeleap.tangerine.domain.Constituent" groupBy="id" extends="CONSTITUENT_RESULT">
        <result property="primaryAddress" resultMap="ADDRESS.ADDRESS_RESULT" />
        <result property="primaryPhone" resultMap="PHONE.PHONE_RESULT" />
        <result property="primaryEmail" resultMap="EMAIL.EMAIL_RESULT" />
    </resultMap>

    <sql id="CONSTITUENT_COLS_FRAGMENT">
    	p.CONSTITUENT_ID AS CONSTITUENT_CONSTITUENT_ID, 
		p.CONSTITUENT_TYPE, p.CREATE_DATE as CONSTITUENT_CREATE_DATE,
	    p.FIRST_NAME as CONSTITUENT_FIRST_NAME, p.LAST_NAME as CONSTITUENT_LAST_NAME, p.LEGAL_NAME as CONSTITUENT_LEGAL_NAME,
		p.LOGIN_ID as CONSTITUENT_LOGIN_ID, p.MARITAL_STATUS as CONSTITUENT_MARITAL_STATUS,
	    p.MIDDLE_NAME as CONSTITUENT_MIDDLE_NAME, p.NAICS_CODE as CONSTITUENT_NAICS_CODE,
	    p.ORGANIZATION_NAME as CONSTITUENT_ORGANIZATION_NAME,
		p.PREFERRED_PHONE_TYPE as CONSTITUENT_PREFERRED_PHONE_TYPE, p.RECOGNITION_NAME as CONSTITUENT_RECOGNITION_NAME,
	    p.SUFFIX as CONSTITUENT_SUFFIX, p.TITLE as CONSTITUENT_TITLE, p.BYPASS_DUPLICATE as CONSTITUENT_BYPASS_DUPLICATE,
	    p.RECENT_GIFT as CONSTITUENT_RECENT_GIFT,
		p.UPDATE_DATE as CONSTITUENT_UPDATE_DATE, p.ACCOUNT_NUMBER as CONSTITUENT_ACCOUNT_NUMBER, p.SITE_NAME
    </sql>
    
	<sql id="SELECT_CONSTITUENT_FRAGMENT">
		select 
        <include refid="CONSTITUENT_COLS_FRAGMENT"/>
		from CONSTITUENT p
		where p.SITE_NAME = #siteName#
	</sql>
	
	<select id="SELECT_CONSTITUENT_BY_IDS_SITE" resultMap="CONSTITUENT_RESULT" parameterClass="map">
		<include refid="SELECT_CONSTITUENT_FRAGMENT"/>		 
		and p.CONSTITUENT_ID in 
		<iterate property="constituentIds" conjunction="," open="(" close=")">
			#constituentIds[]#
		</iterate>
	</select>
	
	<select id="SELECT_CONSTITUENT_BY_ACCOUNT_NUMBER" resultMap="CONSTITUENT_RESULT" parameterClass="map">
		<include refid="SELECT_CONSTITUENT_FRAGMENT"/>		 
		and p.ACCOUNT_NUMBER = #accountNumber# 
	</select>
	
	<select id="SELECT_ALL_CONSTITUENTS_BY_SITE" resultMap="CONSTITUENT_RESULT" parameterClass="string">
		<include refid="SELECT_CONSTITUENT_FRAGMENT"/>
	</select>

<!--
    <select id="SELECT_CONSTITUENTS_BY_SEGMENTATION_RESULT_ID" resultMap="CONSTITUENT_RESULT" parameterClass="map">
        select
        <include refid="CONSTITUENT_COLS_FRAGMENT" />

        FROM CONSTITUENT p
        inner join THEGURU_SEGMENTATION_RESULT res on p.CONSTITUENT_ID = res.ENTITY_ID

        where p.SITE_NAME = #siteName#
        and res.REPORT_ID in
        <iterate property="reportIds" conjunction="," open="(" close=")">
            #reportIds[]#
        </iterate>
        order by
        CASE WHEN IFNULL($sortColumn$,'')='' THEN 1 ELSE 0 END ASC,
		$sortColumn$ + '0' $sortDir$, $sortColumn$ $sortDir$
        limit $offset$,$limit$
    </select>
-->
    
    <select id="SELECT_LIMITED_CONSTITUENTS_BY_SITE" resultMap="CONSTITUENT_RESULT" parameterClass="map">
        SELECT

        <include refid="CONSTITUENT_COLS_FRAGMENT"/>,
        ISDONORTYPE(p.CONSTITUENT_ID, 'majorDonor') AS majorDonor, ISDONORTYPE(p.CONSTITUENT_ID, 'lapsedDonor') AS lapsedDonor
        
        <dynamic prepend=",">
            <isEqual property="sortColumn" compareValue="FIELD_VALUE">
                custFld.FIELD_VALUE
            </isEqual>
        </dynamic>
                
        FROM CONSTITUENT p
        
        <isNotNull property="entityType">
            <isNotNull property="fieldName">
                <isNotNull property="asOfDate">
                    left outer join CUSTOM_FIELD custFld on p.CONSTITUENT_ID = custFld.ENTITY_ID and custFld.ENTITY_TYPE = #entityType#
                        and DATE(#asOfDate#) &gt;= custFld.START_DATE and DATE(#asOfDate#) &lt;= custFld.END_DATE
                        and custFld.FIELD_NAME = #fieldName#
                </isNotNull>
            </isNotNull>
        </isNotNull>

        WHERE 
        	p.SITE_NAME = #siteName#
        <isNotNull property="recentDays" >
       		and p.UPDATE_DATE &gt;= now() - #recentDays#
        </isNotNull>
        
        ORDER BY

        <isNotEqual property="sortColumn" compareValue="majorDonor">
            <isNotEqual property="sortColumn" compareValue="lapsedDonor">
                CASE WHEN IFNULL($sortColumn$,'')='' THEN 1 ELSE 0 END ASC,
            </isNotEqual>
        </isNotEqual>

        $sortColumn$ + '0' $sortDir$, $sortColumn$ $sortDir$
        limit $offset$,$limit$
    </select>
    
    <select id="SELECT_LIMITED_CONSTITUENTS_BY_ID_RANGE" resultMap="CONSTITUENT_RESULT" parameterClass="map">
        select
        <include refid="CONSTITUENT_COLS_FRAGMENT"/>
        from CONSTITUENT p
        where p.SITE_NAME = #siteName#
        and p.ACCOUNT_NUMBER &gt;= #fromId# and p.ACCOUNT_NUMBER &lt;= #toId# 
        order by p.ACCOUNT_NUMBER
        limit 5001
    </select>
    
    <select id="SELECT_CONSTITUENT_COUNT_BY_SITE" parameterClass="string" resultClass="int">
        select count(CONSTITUENT_ID) from CONSTITUENT where SITE_NAME = #value#
    </select>

    <select id="SELECT_CONSTITUENT_MIN_ID" parameterClass="map" resultClass="long">
        select min(CONSTITUENT_ID) from CONSTITUENT where SITE_NAME = #siteName#
    </select>

    <select id="SELECT_CONSTITUENT_MAX_ID" parameterClass="map" resultClass="long">
        select max(CONSTITUENT_ID) from CONSTITUENT where SITE_NAME = #siteName#
    </select>

	<select id="SELECT_CONSTITUENT_BY_LOGIN_ID_SITE" resultMap="CONSTITUENT_RESULT" parameterClass="map">
		<include refid="SELECT_CONSTITUENT_FRAGMENT"/>		 
		and p.LOGIN_ID = #loginId#
	</select>

    <select id="SELECT_CONSTITUENT_BY_SEARCH_TERMS" resultMap="CONSTITUENT_SEARCH_RESULT" parameterClass="map">
        select

        <include refid="CONSTITUENT_COLS_FRAGMENT"/>,
        <include refid="ADDRESS_COLS_FRAGMENT" />,
        <include refid="PHONE_COLS_FRAGMENT" />,
        <include refid="EMAIL_COLS_FRAGMENT" />
        <dynamic prepend=",">
            <isEqual property="sortColumn" compareValue="FIELD_VALUE">
                custFld.FIELD_VALUE
            </isEqual>
        </dynamic>

        from CONSTITUENT p
        left outer join PHONE ph on p.CONSTITUENT_ID = ph.CONSTITUENT_ID and ph.IS_PRIMARY = 1
        left outer join ADDRESS addr on p.CONSTITUENT_ID = addr.CONSTITUENT_ID and addr.IS_PRIMARY = 1
        left outer join EMAIL e on p.CONSTITUENT_ID = e.CONSTITUENT_ID and e.IS_PRIMARY = 1

        <isNotNull property="entityType">
            <isNotNull property="fieldName">
                <isNotNull property="asOfDate">
                    left outer join CUSTOM_FIELD custFld on p.CONSTITUENT_ID = custFld.ENTITY_ID and custFld.ENTITY_TYPE = #entityType#
                        and DATE(#asOfDate#) &gt;= custFld.START_DATE and DATE(#asOfDate#) &lt;= custFld.END_DATE
                        and custFld.FIELD_NAME = #fieldName#
                </isNotNull>
            </isNotNull>
        </isNotNull>

        where p.SITE_NAME = #siteName#
        <isNotEmpty property="additionalWhere">
            AND $additionalWhere$
        </isNotEmpty>
        <isNotEmpty property="searchTerms">
            <iterate property="searchTerms" prepend="HAVING" conjunction="AND">
                $searchTerms[].columnName$ $searchTerms[].columnClause$ #searchTerms[].columnValue#
            </iterate>
        </isNotEmpty>
        <isNotNull property="sortColumn">
            order by
            CASE WHEN IFNULL($sortColumn$,'')='' THEN 1 ELSE 0 END ASC,
            $sortColumn$ + '0' $sortDir$, $sortColumn$ $sortDir$
            limit $offset$,$limit$
        </isNotNull>
        <isNull property="sortColumn">
        	limit 200
        </isNull>
    </select>

	<select id="SELECT_CONSTITUENTS_BY_GIFT_SEGMENTATION_REPORT_ID" resultMap="CONSTITUENT_RESULT" parameterClass="map">
		SELECT DISTINCT
		<include refid="CONSTITUENT_COLS_FRAGMENT" />,
		ISDONORTYPE(p.CONSTITUENT_ID, 'majorDonor') AS majorDonor, ISDONORTYPE(p.CONSTITUENT_ID, 'lapsedDonor') AS lapsedDonor

		<dynamic prepend=",">
		    <isEqual property="sortColumn" compareValue="FIELD_VALUE">
		        custFld.FIELD_VALUE
		    </isEqual>
		</dynamic>

		FROM CONSTITUENT p
		INNER JOIN GIFT g ON g.CONSTITUENT_ID = p.CONSTITUENT_ID AND g.GIFT_TYPE != 'GIFT_IN_KIND'
		INNER JOIN THEGURU_SEGMENTATION_RESULT res ON g.GIFT_ID = res.ENTITY_ID AND res.REPORT_ID IN
		<iterate property="reportIds" conjunction="," open="(" close=")">
		    #reportIds[]#
		</iterate>
		
		<isNotNull property="entityType">
		    <isNotNull property="fieldName">
		        <isNotNull property="asOfDate">
		            left outer join CUSTOM_FIELD custFld on p.CONSTITUENT_ID = custFld.ENTITY_ID and custFld.ENTITY_TYPE = #entityType#
		                and DATE(#asOfDate#) &gt;= custFld.START_DATE and DATE(#asOfDate#) &lt;= custFld.END_DATE
		                and custFld.FIELD_NAME = #fieldName#
		        </isNotNull>
		    </isNotNull>
		</isNotNull>

		WHERE p.SITE_NAME = #siteName#
		ORDER BY
		CASE WHEN IFNULL($sortColumn$,'')='' THEN 1 ELSE 0 END ASC,
		$sortColumn$ + '0' $sortDir$, $sortColumn$ $sortDir$
		limit $offset$,$limit$
	</select>

	<select id="COUNT_CONSTITUENTS_BY_GIFT_SEGMENTATION_REPORT_ID" resultClass="int" parameterClass="map">
		SELECT count(DISTINCT p.CONSTITUENT_ID)

		FROM CONSTITUENT p
		INNER JOIN GIFT g ON g.CONSTITUENT_ID = p.CONSTITUENT_ID AND g.GIFT_TYPE != 'GIFT_IN_KIND'
		INNER JOIN THEGURU_SEGMENTATION_RESULT res ON g.GIFT_ID = res.ENTITY_ID AND res.REPORT_ID IN
		<iterate property="reportIds" conjunction="," open="(" close=")">
		    #reportIds[]#
		</iterate>

		WHERE p.SITE_NAME = #siteName#
	</select>

	<select id="SELECT_CONSTITUENTS_BY_ADJUSTED_GIFT_SEGMENTATION_REPORT_ID" resultMap="CONSTITUENT_RESULT" parameterClass="map">
		SELECT DISTINCT
		<include refid="CONSTITUENT_COLS_FRAGMENT" />,
		ISDONORTYPE(p.CONSTITUENT_ID, 'majorDonor') AS majorDonor, ISDONORTYPE(p.CONSTITUENT_ID, 'lapsedDonor') AS lapsedDonor

		<dynamic prepend=",">
		    <isEqual property="sortColumn" compareValue="FIELD_VALUE">
		        custFld.FIELD_VALUE
		    </isEqual>
		</dynamic>

		FROM CONSTITUENT p
		INNER JOIN ADJUSTED_GIFT ag ON ag.CONSTITUENT_ID = p.CONSTITUENT_ID 
		INNER JOIN THEGURU_SEGMENTATION_RESULT res ON ag.ADJUSTED_GIFT_ID = res.ENTITY_ID AND res.REPORT_ID IN
		<iterate property="reportIds" conjunction="," open="(" close=")">
		    #reportIds[]#
		</iterate>

		<isNotNull property="entityType">
		    <isNotNull property="fieldName">
		        <isNotNull property="asOfDate">
		            left outer join CUSTOM_FIELD custFld on p.CONSTITUENT_ID = custFld.ENTITY_ID and custFld.ENTITY_TYPE = #entityType#
		                and DATE(#asOfDate#) &gt;= custFld.START_DATE and DATE(#asOfDate#) &lt;= custFld.END_DATE
		                and custFld.FIELD_NAME = #fieldName#
		        </isNotNull>
		    </isNotNull>
		</isNotNull>

		WHERE p.SITE_NAME = #siteName#
		ORDER BY
		CASE WHEN IFNULL($sortColumn$,'')='' THEN 1 ELSE 0 END ASC,
		$sortColumn$ + '0' $sortDir$, $sortColumn$ $sortDir$
		limit $offset$,$limit$
	</select>

	<select id="COUNT_CONSTITUENTS_BY_ADJUSTED_GIFT_SEGMENTATION_REPORT_ID" resultClass="int" parameterClass="map">
		SELECT count(DISTINCT p.CONSTITUENT_ID)

		FROM CONSTITUENT p
		INNER JOIN ADJUSTED_GIFT ag ON ag.CONSTITUENT_ID = p.CONSTITUENT_ID
		INNER JOIN THEGURU_SEGMENTATION_RESULT res ON ag.ADJUSTED_GIFT_ID = res.ENTITY_ID AND res.REPORT_ID IN
		<iterate property="reportIds" conjunction="," open="(" close=")">
		    #reportIds[]#
		</iterate>

		WHERE p.SITE_NAME = #siteName#
	</select>


	<insert id="INSERT_CONSTITUENT" parameterClass="com.orangeleap.tangerine.domain.Constituent">
		insert into CONSTITUENT (
		CONSTITUENT_TYPE, FIRST_NAME, LAST_NAME, LEGAL_NAME, BYPASS_DUPLICATE, RECENT_GIFT,
		LOGIN_ID, MARITAL_STATUS, MIDDLE_NAME, NAICS_CODE, ORGANIZATION_NAME,
		PREFERRED_PHONE_TYPE, RECOGNITION_NAME, SUFFIX, TITLE, CREATE_DATE, UPDATE_DATE, SITE_NAME, ACCOUNT_NUMBER)
		values (
		#constituentType#, #firstName#, #lastName#, #legalName#, #byPassDuplicateDetection#, #recentGift#,
		#loginId#, #maritalStatus#, #middleName#,	#naicsCode#, #organizationName#,
		#preferredPhoneType#, #recognitionName#, #suffix#, #title#, now(), now(), #site.name#, #accountNumber#
		)
		<selectKey keyProperty="id" resultClass="long">
			SELECT LAST_INSERT_ID() AS value
		</selectKey>
	</insert>

	<update id="UPDATE_CONSTITUENT" parameterClass="com.orangeleap.tangerine.domain.Constituent">
		update CONSTITUENT
		set 
		CONSTITUENT_TYPE = #constituentType#,
		FIRST_NAME = #firstName#,
		LAST_NAME = #lastName#,
		LEGAL_NAME = #legalName#,
		LOGIN_ID = #loginId#,
		MARITAL_STATUS = #maritalStatus#,
		MIDDLE_NAME = #middleName#,
		NAICS_CODE = #naicsCode#,
		ORGANIZATION_NAME = #organizationName#,
		PREFERRED_PHONE_TYPE = #preferredPhoneType#,
		RECOGNITION_NAME = #recognitionName#,
		SUFFIX = #suffix#,
		TITLE = #title#,
		BYPASS_DUPLICATE = #byPassDuplicateDetection#, 
		RECENT_GIFT = #recentGift#,
		ACCOUNT_NUMBER = #accountNumber#,
		UPDATE_DATE = now()
		where CONSTITUENT_ID = #id# and SITE_NAME = #site.name#
	</update>

	<statement id="SELECT_CONSTITUENT_BY_FIND_TERMS" resultMap="CONSTITUENT_RESULT" parameterClass="map">
	    select
		<include refid="CONSTITUENT_COLS_FRAGMENT"/> 
		from CONSTITUENT p
		where 
		p.SITE_NAME = #siteName#
		<isNotNull property="ignoreIds"> 
	       and p.CONSTITUENT_ID not in 
		   <iterate property="ignoreIds" conjunction="," open="(" close=")">
		      #ignoreIds[]#
		   </iterate>
		</isNotNull>
		<isNotNull property="stringParams"> 
		   <iterate property="stringParams" conjunction="and" open="and" close="">
		   p.$stringParams[].key$ = #stringParams[].value#
		   </iterate>
		</isNotNull>
		<isNotNull property="nonStringParams"> 
		   <iterate property="nonStringParams" conjunction="and" open="and" close="">
		   p.$nonStringParams[].key$ = #nonStringParams[].value#
		   </iterate>
		</isNotNull>
		<isNotNull property="phoneParams"> 
		   and exists (
		    select * from PHONE ph where 
		    ph.CONSTITUENT_ID = p.CONSTITUENT_ID
		    <iterate property="phoneParams" conjunction="and" open="and" close="">
		    ph.$phoneParams[].key$ = #phoneParams[].value#
		    </iterate>
		   )
		</isNotNull>
		<isNotNull property="addressParams"> 
		   and exists (
		    select * from ADDRESS saddr where 
		    saddr.CONSTITUENT_ID = p.CONSTITUENT_ID
		    <iterate property="addressParams" conjunction="and" open="and" close="">
		    saddr.$addressParams[].key$ = #addressParams[].value#
		    </iterate>
		   )
		</isNotNull>
		<isNotNull property="emailParams"> 
		   and exists (
		    select * from EMAIL e where 
		    e.CONSTITUENT_ID = p.CONSTITUENT_ID
		    <iterate property="emailParams" conjunction="and" open="and" close="">
		    e.$emailParams[].key$ = #emailParams[].value#
		    </iterate>
		   )
		</isNotNull>
		<isNotNull property="customParams"> 
		   and exists (
		    select * from CUSTOM_FIELD cf where 
		    cf.ENTITY_ID = p.CONSTITUENT_ID
		    and cf.ENTITY_TYPE = 'constituent'
		    <iterate property="customParams" conjunction="and" open="and" close="">
		    cf.FIELD_NAME = #customParams[].key# and cf.FIELD_VALUE = #customParams[].value#
		    </iterate>
		   )
		</isNotNull>
		<isNotNull property="additionalWhere"> 
			and $additionalWhere$
		</isNotNull>
		limit 200
	</statement>
	
	<select id="SET_CONSTITUENT_FLAGS">
		select SET_CONSTITUENT_FLAGS();
	</select>

</sqlMap>