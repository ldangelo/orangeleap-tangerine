<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="GIFT">

	<!-- Note: NO groupBy in base map -->
	<resultMap id="MIN_GIFT_RESULT_NO_DISTRO_LINES" class="com.orangeleap.tangerine.domain.paymentInfo.Gift" >
		<result property="id" column="GIFT_ID" jdbcType="BIGINT" />
		<result property="giftStatus" column="GIFT_STATUS" jdbcType="VARCHAR" />
		<result property="giftType" column="GIFT_TYPE" jdbcType="VARCHAR" />
		<result property="amount" column="GIFT_AMOUNT" jdbcType="DECIMAL" />
		<result property="adjustedAmount" column="GIFT_ADJUSTED_AMOUNT" jdbcType="DECIMAL" />
		<result property="authCode" column="GIFT_AUTH_CODE" jdbcType="VARCHAR" />
		<result property="avsMessage" column="GIFT_AVS_MESSAGE" jdbcType="VARCHAR" />
		<result property="checkNumber" column="GIFT_CHECK_NUMBER" jdbcType="VARCHAR" />
		<result property="comments" column="GIFT_COMMENTS" jdbcType="VARCHAR" />
		<result property="currencyCode" column="GIFT_CURRENCY_CODE" jdbcType="VARCHAR" />
		<result property="deductibleAmount" column="GIFT_DEDUCTIBLE_AMOUNT" jdbcType="DECIMAL" />
		<result property="donationDate" column="GIFT_DONATION_DATE" jdbcType="TIMESTAMP" />
		<result property="entryType" column="GIFT_ENTRY_TYPE" jdbcType="VARCHAR" />
		<result property="paymentMessage" column="GIFT_PAYMENT_MESSAGE" jdbcType="VARCHAR" />
		<result property="paymentStatus" column="GIFT_PAYMENT_STATUS" jdbcType="VARCHAR" />
		<result property="paymentType" column="GIFT_PAYMENT_TYPE" jdbcType="VARCHAR" />
		<result property="posted" column="GIFT_POSTED" jdbcType="CHAR" />
		<result property="postedDate" column="GIFT_POSTED_DATE" jdbcType="TIMESTAMP" />
		<result property="postmarkDate" column="GIFT_POSTMARK_DATE" jdbcType="TIMESTAMP" />
		<result property="transactionDate" column="GIFT_TRANSACTION_DATE" jdbcType="TIMESTAMP" />
		<result property="txRefNum" column="GIFT_PAYMENT_TXREFNUM" jdbcType="VARCHAR" />
		<result property="updateDate" column="GIFT_UPDATE_DATE" jdbcType="TIMESTAMP" />
		<result property="createDate" column="GIFT_CREATE_DATE" jdbcType="TIMESTAMP" />
        <result property="constituent" resultMap="CONSTITUENT.CONSTITUENT_RESULT" />
	</resultMap>
	
    <resultMap id="GIFT_RESULT_NO_DISTRO_LINES" class="com.orangeleap.tangerine.domain.paymentInfo.Gift" groupBy="id" extends="MIN_GIFT_RESULT_NO_DISTRO_LINES">
        <result property="address" resultMap="ADDRESS.ADDRESS_RESULT" />
        <result property="phone" resultMap="PHONE.PHONE_RESULT" />
        <result property="paymentSource" resultMap="PAYMENT_SOURCE.PAYMENT_SOURCE_RESULT" />
    </resultMap>

    <resultMap id="GIFT_LIST_RESULT" class="com.orangeleap.tangerine.domain.paymentInfo.Gift" groupBy="id" extends="MIN_GIFT_RESULT_NO_DISTRO_LINES">
        <result property="paymentSource" resultMap="PAYMENT_SOURCE.MIN_PAYMENT_SOURCE_RESULT" />
    </resultMap>

    <resultMap id="GIFT_SEARCH_RESULT" class="com.orangeleap.tangerine.domain.paymentInfo.Gift" groupBy="id" extends="MIN_GIFT_RESULT_NO_DISTRO_LINES">
        <result property="address" resultMap="ADDRESS.ADDRESS_RESULT" />
        <result property="phone" resultMap="PHONE.PHONE_RESULT" />
        <result property="paymentSource" resultMap="PAYMENT_SOURCE.MIN_PAYMENT_SOURCE_RESULT" />
    </resultMap>

	<resultMap id="GIFT_RESULT" class="com.orangeleap.tangerine.domain.paymentInfo.Gift" groupBy="id" extends="GIFT_RESULT_NO_DISTRO_LINES">
		<result property="distributionLines" resultMap="DISTRO_LINE.DISTRO_LINE_RESULT" />
	</resultMap>

	<resultMap id="GIFT_DISTRO_LINES_RESULT" class="com.orangeleap.tangerine.domain.paymentInfo.Gift" groupBy="id" extends="MIN_GIFT_RESULT_NO_DISTRO_LINES">
        <result property="address" resultMap="ADDRESS.ADDRESS_RESULT" />
        <result property="phone" resultMap="PHONE.PHONE_RESULT" />
        <result property="paymentSource" resultMap="PAYMENT_SOURCE.PAYMENT_SOURCE_RESULT" />
		<result property="distributionLines" resultMap="DISTRO_LINE.DISTRO_LINE_RESULT" />
	</resultMap>

	<sql id="GIFT_COLS_FRAGMENT">
		g.GIFT_ID, g.GIFT_STATUS, g.GIFT_TYPE, g.AMOUNT as GIFT_AMOUNT, g.ADJUSTED_AMOUNT as GIFT_ADJUSTED_AMOUNT, g.AUTH_CODE as GIFT_AUTH_CODE, g.AVS_MESSAGE as GIFT_AVS_MESSAGE,  
		g.CHECK_NUMBER as GIFT_CHECK_NUMBER, g.COMMENTS as GIFT_COMMENTS, g.CURRENCY_CODE as GIFT_CURRENCY_CODE,
		g.DEDUCTIBLE_AMOUNT as GIFT_DEDUCTIBLE_AMOUNT, g.DONATION_DATE as GIFT_DONATION_DATE, g.ENTRY_TYPE as GIFT_ENTRY_TYPE,
		g.PAYMENT_MESSAGE as GIFT_PAYMENT_MESSAGE, g.PAYMENT_STATUS as GIFT_PAYMENT_STATUS, g.PAYMENT_TYPE as GIFT_PAYMENT_TYPE, 
		g.POSTED as GIFT_POSTED, g.POSTED_DATE as GIFT_POSTED_DATE, g.POSTMARK_DATE as GIFT_POSTMARK_DATE,
		g.TRANSACTION_DATE as GIFT_TRANSACTION_DATE, g.PAYMENT_TXREFNUM as GIFT_PAYMENT_TXREFNUM, 
		g.UPDATE_DATE as GIFT_UPDATE_DATE, g.CREATE_DATE as GIFT_CREATE_DATE
	</sql>
	
	<sql id="GIFT_COLS_CHILD_IDS_FRAGMENT">
		<include refid="GIFT_COLS_FRAGMENT"/>,
		g.CONSTITUENT_ID, g.ADDRESS_ID, g.PHONE_ID, g.PAYMENT_SOURCE_ID
	</sql>

	<sql id="GIFT_QUERY_FRAGMENT">
		select
		<include refid="GIFT_COLS_FRAGMENT" />,
		<include refid="CONSTITUENT_COLS_FRAGMENT" />,
		<include refid="ADDRESS_COLS_FRAGMENT" />,
		<include refid="PHONE_COLS_FRAGMENT" />,
		<include refid="PAYMENT_SRC_COLS_FRAGMENT" />,
		<include refid="DISTRO_LINE_COLS_FRAGMENT" />
		from GIFT g
		inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID
		left outer join PHONE ph on g.PHONE_ID = ph.PHONE_ID
		left outer join ADDRESS addr on g.ADDRESS_ID = addr.ADDRESS_ID
		left outer join PAYMENT_SOURCE ps on g.PAYMENT_SOURCE_ID = ps.PAYMENT_SOURCE_ID
		left outer join DISTRO_LINE dl on g.GIFT_ID = dl.GIFT_ID
		<isNotNull property="constituentReferenceCustomField" >
        inner join CUSTOM_FIELD cf on
          cf.ENTITY_ID = dl.DISTRO_LINE_ID
          and cf.ENTITY_TYPE = 'distributionline' 
          and cf.FIELD_NAME = #constituentReferenceCustomField#
          and cf.FIELD_VALUE = #constituentId#
        </isNotNull>
		
		where p.SITE_NAME = #siteName#
	</sql>
	
	<sql id="GIFTS_ROWCOUNT_FRAGMENT">
        select count(*)
		from GIFT g
		inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID
        where p.SITE_NAME = #siteName#
		and g.GIFT_TYPE != 'GIFT_IN_KIND'
    </sql>

    <select id="SELECT_GIFT_BY_ID" resultMap="GIFT_RESULT" parameterClass="map">
        <include refid="GIFT_QUERY_FRAGMENT" />
        and g.GIFT_ID = #id#
    </select>

	<select id="SELECT_ALL_GIFTS_BY_SITE" resultMap="GIFT_RESULT" parameterClass="map">
		<include refid="GIFT_QUERY_FRAGMENT" />
	</select>
	
	<select id="SELECT_ALL_GIFTS_BY_DATE_RANGE" resultMap="GIFT_RESULT" parameterClass="map">
		<include refid="GIFT_QUERY_FRAGMENT" />
		and g.TRANSACTION_DATE between #fromDate# and #toDate# 
		order by g.TRANSACTION_DATE desc
		limit 5001
	</select>

	<select id="SELECT_FIRST_OR_LAST_GIFT_BY_CONSTITUENT" resultMap="GIFT_RESULT" parameterClass="map">
		<include refid="GIFT_QUERY_FRAGMENT" />
		and g.CONSTITUENT_ID = #constituentId#
		<isNotNull property="fromDate">
		and g.DONATION_DATE &gt;= #fromDate#
		</isNotNull>
		<isNotNull property="toDate">
		and g.DONATION_DATE &lt;= #toDate#
		</isNotNull>
		<isNotNull property="giftStatus">
		and g.GIFT_STATUS = #giftStatus# 
		</isNotNull>
		<isNotNull property="giftType">
		and g.GIFT_TYPE = #giftType#
		</isNotNull>
		order by g.DONATION_DATE, g.TRANSACTION_DATE 
		<isNull property="first">
		desc
		</isNull>
		limit 1
	</select>
	
	<select id="SELECT_LARGEST_GIFT_BY_CONSTITUENT" resultMap="GIFT_RESULT" parameterClass="map">
		<include refid="GIFT_QUERY_FRAGMENT" />
		and g.CONSTITUENT_ID = #constituentId#
		<isNotNull property="fromDate">
		and g.DONATION_DATE &gt;= #fromDate#
		</isNotNull>
		<isNotNull property="toDate">
		and g.DONATION_DATE &lt;= #toDate#
		</isNotNull>
		<isNotNull property="giftStatus">
		and g.GIFT_STATUS = #giftStatus# 
		</isNotNull>
		<isNotNull property="giftType">
		and g.GIFT_TYPE = #giftType#
		</isNotNull>
		order by g.ADJUSTED_AMOUNT 
		desc
		limit 1
	</select>
	
	<select id="SELECT_FIRST_OR_LAST_INDIRECT_GIFT_BY_CONSTITUENT" resultMap="GIFT_RESULT" parameterClass="map">
		<include refid="GIFT_QUERY_FRAGMENT" />
		<isNotNull property="fromDate">
		and g.DONATION_DATE &gt;= #fromDate#
		</isNotNull>
		<isNotNull property="toDate">
		and g.DONATION_DATE &lt;= #toDate#
		</isNotNull>
		<isNotNull property="giftStatus">
		and g.GIFT_STATUS = #giftStatus# 
		</isNotNull>
		<isNotNull property="giftType">
		and g.GIFT_TYPE = #giftType#
		</isNotNull>
		order by g.DONATION_DATE, g.TRANSACTION_DATE
		<isNull property="first">
		desc
		</isNull>
		limit 1
	</select>
	
	<select id="SELECT_LARGEST_INDIRECT_GIFT_BY_CONSTITUENT" resultMap="GIFT_RESULT" parameterClass="map">
		<include refid="GIFT_QUERY_FRAGMENT" />
		<isNotNull property="fromDate">
		and g.DONATION_DATE &gt;= #fromDate#
		</isNotNull>
		<isNotNull property="toDate">
		and g.DONATION_DATE &lt;= #toDate#
		</isNotNull>
		<isNotNull property="giftStatus">
		and g.GIFT_STATUS = #giftStatus# 
		</isNotNull>
		<isNotNull property="giftType">
		and g.GIFT_TYPE = #giftType#
		</isNotNull>
		order by g.ADJUSTED_AMOUNT 
		desc
		limit 1
	</select>
	
	<select id="SELECT_GIFTS_BY_CONSTITUENT_ID" resultMap="GIFT_RESULT" parameterClass="map">
		<include refid="GIFT_QUERY_FRAGMENT" />
		and g.CONSTITUENT_ID = #constituentId#
		and g.GIFT_TYPE != 'GIFT_IN_KIND'
		order by g.TRANSACTION_DATE desc
	</select>
	
	<select id="SELECT_GIFTS_BY_CONSTITUENT_ID_PAGINATED" resultClass="java.util.HashMap" parameterClass="map">
		select a.id, a.date, a.constituentid, a.amount, a.currencycode, a.type, a.status, a.comments, a.refnumber, 
		a.authcode, a.gifttype, a.txndt, IF ($sortColumn$ IS NULL or $sortColumn$ = '', 1, 0) AS isnull
 		from 
		
		(select g.GIFT_ID as id, g.DONATION_DATE as date, g.CONSTITUENT_ID as constituentid, g.AMOUNT as amount, g.CURRENCY_CODE as currencycode, 
		g.PAYMENT_TYPE as type, g.PAYMENT_STATUS as status, g.COMMENTS as comments, g.PAYMENT_TXREFNUM as refnumber, g.AUTH_CODE as authcode, 'MONETARY' as gifttype, 
		g.TRANSACTION_DATE as txndt
		from GIFT g
		inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID
		where p.SITE_NAME = #siteName#
		and g.CONSTITUENT_ID = #constituentId#
		and g.GIFT_TYPE != 'GIFT_IN_KIND'
		
		union 
		
		select ag.ADJUSTED_GIFT_ID as id, ag.ADJUSTED_TRANSACTION_DATE as date, ag.CONSTITUENT_ID as constituentid, ag.ADJUSTED_AMOUNT as amount, g2.CURRENCY_CODE as currencycode, 
		ag.PAYMENT_TYPE as type, ag.PAYMENT_STATUS as status, ag.COMMENTS as comments, ag.PAYMENT_TXREFNUM as refnumber, ag.AUTH_CODE as authcode, 'ADJUSTED' as gifttype, 
		ag.ADJUSTED_TRANSACTION_DATE as txndt
		from ADJUSTED_GIFT ag
		inner join CONSTITUENT p on ag.CONSTITUENT_ID = p.CONSTITUENT_ID
		inner join GIFT g2 on ag.GIFT_ID = g2.GIFT_ID
		where p.SITE_NAME = #siteName#
		and ag.CONSTITUENT_ID = #constituentId#) as a
		
		order by
		isnull ASC,
		$sortColumn$ $sortDir$, txndt desc
        limit $offset$,$limit$
	</select>

    <select id="SELECT_LIMITED_GIFTS_BY_CONSTITUENT_ID" resultMap="GIFT_LIST_RESULT" parameterClass="map">
        select
        <include refid="GIFT_COLS_FRAGMENT" />,
        <include refid="CONSTITUENT_COLS_FRAGMENT" />,
        <include refid="PAYMENT_SRC_COLS_FRAGMENT" />

        <dynamic prepend=",">
            <isEqual property="sortColumn" compareValue="FIELD_VALUE">
                custFld.FIELD_VALUE
            </isEqual>
        </dynamic>

        from GIFT g
        inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID
        left outer join PAYMENT_SOURCE ps on g.PAYMENT_SOURCE_ID = ps.PAYMENT_SOURCE_ID

        <isNotNull property="entityType">
            <isNotNull property="fieldName">
                <isNotNull property="asOfDate">
                    left outer join CUSTOM_FIELD custFld on g.GIFT_ID = custFld.ENTITY_ID and custFld.ENTITY_TYPE = #entityType#
                        and DATE(#asOfDate#) &gt;= custFld.START_DATE and DATE(#asOfDate#) &lt;= custFld.END_DATE
                        and custFld.FIELD_NAME = #fieldName#
                </isNotNull>
            </isNotNull>
        </isNotNull>

        where p.SITE_NAME = #siteName#
        and g.CONSTITUENT_ID = #constituentId#
        and g.GIFT_TYPE != 'GIFT_IN_KIND'
        order by
        CASE WHEN IFNULL($sortColumn$,'')='' THEN 1 ELSE 0 END ASC,
		$sortColumn$ + '0' $sortDir$, $sortColumn$ $sortDir$
        limit $offset$,$limit$
    </select>

    <select id="SELECT_LIMITED_GIFT_DISTRO_LINES_BY_CONSTITUENT_ID" resultMap="GIFT_DISTRO_LINES_RESULT" parameterClass="map">
        select
        <include refid="GIFT_COLS_FRAGMENT" />,
        <include refid="CONSTITUENT_COLS_FRAGMENT" />,
        <include refid="ADDRESS_COLS_FRAGMENT" />,
        <include refid="PHONE_COLS_FRAGMENT" />,
        <include refid="PAYMENT_SRC_COLS_FRAGMENT" />,
		<include refid="DISTRO_LINE_COLS_FRAGMENT" />

        <dynamic prepend=",">
            <isEqual property="sortColumn" compareValue="FIELD_VALUE">
                custFld.FIELD_VALUE
            </isEqual>
        </dynamic>

        from GIFT g
		inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID
        left outer join PHONE ph on g.PHONE_ID = ph.PHONE_ID
        left outer join ADDRESS addr on g.ADDRESS_ID = addr.ADDRESS_ID
        left outer join PAYMENT_SOURCE ps on g.PAYMENT_SOURCE_ID = ps.PAYMENT_SOURCE_ID
        inner join DISTRO_LINE dl on g.GIFT_ID = dl.GIFT_ID
        <isNotNull property="constituentReferenceCustomField" >
        inner join CUSTOM_FIELD cf on
          cf.ENTITY_ID = dl.DISTRO_LINE_ID
          and cf.ENTITY_TYPE = 'distributionline' 
          and cf.FIELD_NAME = #constituentReferenceCustomField#
          and cf.FIELD_VALUE = #constituentId#
        </isNotNull>

        <isNotNull property="entityType">
            <isNotNull property="fieldName">
                <isNotNull property="asOfDate">
                    left outer join CUSTOM_FIELD custFld on g.GIFT_ID = custFld.ENTITY_ID and custFld.ENTITY_TYPE = #entityType#
                        and DATE(#asOfDate#) &gt;= custFld.START_DATE and DATE(#asOfDate#) &lt;= custFld.END_DATE
                        and custFld.FIELD_NAME = #fieldName#
                </isNotNull>
            </isNotNull>
        </isNotNull>

        where p.SITE_NAME = #siteName#
        and g.GIFT_TYPE != 'GIFT_IN_KIND'
        <isNull property="constituentReferenceCustomField" >
        and g.CONSTITUENT_ID = #constituentId#
        </isNull>
        order by
        CASE WHEN IFNULL($sortColumn$,'')='' THEN 1 ELSE 0 END ASC,
		$sortColumn$ + '0' $sortDir$, $sortColumn$ $sortDir$
        limit $offset$,$limit$
    </select>

    <select id="SELECT_GIFT_BY_SEARCH_TERMS" resultMap="GIFT_SEARCH_RESULT" parameterClass="map">
        select

        <include refid="GIFT_COLS_FRAGMENT" />,
        <include refid="CONSTITUENT_COLS_FRAGMENT" />,
        <include refid="ADDRESS_COLS_FRAGMENT" />,
        <include refid="PHONE_COLS_FRAGMENT" />,
        <include refid="PAYMENT_SRC_COLS_FRAGMENT" />
        <dynamic prepend=",">
            <isEqual property="sortColumn" compareValue="FIELD_VALUE">
                custFld.FIELD_VALUE
            </isEqual>
        </dynamic>

        from GIFT g
        inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID
        left outer join PHONE ph on g.PHONE_ID = ph.PHONE_ID
        left outer join ADDRESS addr on g.ADDRESS_ID = addr.ADDRESS_ID
        left outer join PAYMENT_SOURCE ps on g.PAYMENT_SOURCE_ID = ps.PAYMENT_SOURCE_ID
        <isNotNull property="entityType">
            <isNotNull property="fieldName">
                <isNotNull property="asOfDate">
                    left outer join CUSTOM_FIELD custFld on g.GIFT_ID = custFld.ENTITY_ID and custFld.ENTITY_TYPE = #entityType#
                        and DATE(#asOfDate#) &gt;= custFld.START_DATE and DATE(#asOfDate#) &lt;= custFld.END_DATE
                        and custFld.FIELD_NAME = #fieldName#
                </isNotNull>
            </isNotNull>
        </isNotNull>

        where p.SITE_NAME = #siteName#
        and g.GIFT_TYPE != 'GIFT_IN_KIND'

        <isNotEmpty property="searchTerms">
            <iterate property="searchTerms" prepend="HAVING" conjunction="AND">
                $searchTerms[].columnName$ $searchTerms[].columnClause$ #searchTerms[].columnValue#
            </iterate>
        </isNotEmpty>
        <isNotNull property="sortColumn">
            order by
            CASE WHEN IFNULL($sortColumn$,'')='' THEN 1 ELSE 0 END ASC,
            $sortColumn$ + '0' $sortDir$, $sortColumn$ $sortDir$
            limit $offset$,$limit$
        </isNotNull>
    </select>

    <select id="SELECT_GIFTS_COUNT_BY_CONSTITUENT_ID" parameterClass="map" resultClass="int">
        select count(g.GIFT_ID)
        from GIFT g
        inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID
        where p.SITE_NAME = #siteName#
        and g.CONSTITUENT_ID = #constituentId#
    </select>

    <select id="SELECT_GIFT_DISTRO_LINES_COUNT_BY_CONSTITUENT_ID" parameterClass="map" resultClass="int">
        select count(g.GIFT_ID)
        from GIFT g
        inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID
        inner join DISTRO_LINE dl on g.GIFT_ID = dl.GIFT_ID
        <isNotNull property="constituentReferenceCustomField" >
        inner join CUSTOM_FIELD cf on
          cf.ENTITY_ID = dl.DISTRO_LINE_ID
          and cf.ENTITY_TYPE = 'distributionline' 
          and cf.FIELD_NAME = #constituentReferenceCustomField#
          and cf.FIELD_VALUE = #constituentId#
        </isNotNull>
        where p.SITE_NAME = #siteName#
        and g.GIFT_TYPE != 'GIFT_IN_KIND'
        <isNull property="constituentReferenceCustomField" >
        and g.CONSTITUENT_ID = #constituentId#
        </isNull>
    </select>

	<select id="GIFTS_BY_CONSTITUENT_ID_ROWCOUNT" resultClass="long" parameterClass="map" >
        <include refid="GIFTS_ROWCOUNT_FRAGMENT"/>
		and g.CONSTITUENT_ID = #constituentId#
    </select>

	<select id="ANALYZE_FOR_MAJOR_DONOR" parameterClass="map" resultClass="decimal">
		select SUM(g.AMOUNT)
		from GIFT g
		inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID
		where p.SITE_NAME = #siteName#
		and g.CONSTITUENT_ID = #constituentId#
		and g.TRANSACTION_DATE between #beginDate# and #currentDate#
		and g.GIFT_TYPE != 'GIFT_IN_KIND'
	</select>

	<select id="ANALYZE_FOR_LAPSED_DONOR" parameterClass="map" resultMap="CONSTITUENT.CONSTITUENT_RESULT">
		select 
		<include refid="CONSTITUENT_COLS_FRAGMENT" />
		from CONSTITUENT p 
		inner join GIFT g on p.CONSTITUENT_ID = g.CONSTITUENT_ID
		where g.AMOUNT > 0 
		and (g.TRANSACTION_DATE between #beginDate# and #currentDate#)
		and g.GIFT_TYPE != 'GIFT_IN_KIND'
	</select>

    <select id="SELECT_GIFTS_BY_SEGMENTATION_REPORT_ID" resultMap="GIFT_LIST_RESULT" parameterClass="map">
        select
        <include refid="GIFT_COLS_FRAGMENT" />,
        <include refid="CONSTITUENT_COLS_FRAGMENT" />,
        <include refid="PAYMENT_SRC_COLS_FRAGMENT" />

        <dynamic prepend=",">
            <isEqual property="sortColumn" compareValue="FIELD_VALUE">
                custFld.FIELD_VALUE
            </isEqual>
        </dynamic>

        from GIFT g
        inner join THEGURU_SEGMENTATION_RESULT res on g.GIFT_ID = res.ENTITY_ID
        inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID
        left outer join PAYMENT_SOURCE ps on g.PAYMENT_SOURCE_ID = ps.PAYMENT_SOURCE_ID

        <isNotNull property="entityType">
            <isNotNull property="fieldName">
                <isNotNull property="asOfDate">
                    left outer join CUSTOM_FIELD custFld on g.GIFT_ID = custFld.ENTITY_ID and custFld.ENTITY_TYPE = #entityType#
                        and DATE(#asOfDate#) &gt;= custFld.START_DATE and DATE(#asOfDate#) &lt;= custFld.END_DATE
                        and custFld.FIELD_NAME = #fieldName#
                </isNotNull>
            </isNotNull>
        </isNotNull>

        where p.SITE_NAME = #siteName#
        and g.GIFT_TYPE != 'GIFT_IN_KIND'
        and res.REPORT_ID in
        <iterate property="reportIds" conjunction="," open="(" close=")">
            #reportIds[]#
        </iterate>
        order by
        CASE WHEN IFNULL($sortColumn$,'')='' THEN 1 ELSE 0 END ASC,
		$sortColumn$ + '0' $sortDir$, $sortColumn$ $sortDir$
        limit $offset$,$limit$
    </select>

    <select id="COUNT_GIFTS_BY_SEGMENTATION_REPORT_ID" resultClass="int" parameterClass="map">
        select count(g.GIFT_ID)
        
        from GIFT g
        inner join THEGURU_SEGMENTATION_RESULT res on g.GIFT_ID = res.ENTITY_ID
        inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID

        where p.SITE_NAME = #siteName#
        and g.GIFT_TYPE != 'GIFT_IN_KIND'
        and res.REPORT_ID in
        <iterate property="reportIds" conjunction="," open="(" close=")">
            #reportIds[]#
        </iterate>
    </select>

    <select id="SELECT_ALL_GIFTS_BY_SEGMENTATION_REPORT_ID" resultMap="GIFT_RESULT" parameterClass="map">
        select
        <include refid="GIFT_COLS_FRAGMENT" />,
        <include refid="CONSTITUENT_COLS_FRAGMENT" />,
        <include refid="ADDRESS_COLS_FRAGMENT" />,
        <include refid="PHONE_COLS_FRAGMENT" />,
        <include refid="PAYMENT_SRC_COLS_FRAGMENT" />,
        <include refid="DISTRO_LINE_COLS_FRAGMENT" />

        from GIFT g
        inner join THEGURU_SEGMENTATION_RESULT res on g.GIFT_ID = res.ENTITY_ID
        inner join CONSTITUENT p on g.CONSTITUENT_ID = p.CONSTITUENT_ID
        left outer join PHONE ph on g.PHONE_ID = ph.PHONE_ID
        left outer join ADDRESS addr on g.ADDRESS_ID = addr.ADDRESS_ID
        left outer join PAYMENT_SOURCE ps on g.PAYMENT_SOURCE_ID = ps.PAYMENT_SOURCE_ID
        left outer join DISTRO_LINE dl on g.GIFT_ID = dl.GIFT_ID

        where p.SITE_NAME = #siteName#
        and g.GIFT_TYPE != 'GIFT_IN_KIND'
        and res.REPORT_ID in
        <iterate property="reportIds" conjunction="," open="(" close=")">
            #reportIds[]#
        </iterate>
        
    </select>

	<insert id="INSERT_GIFT" parameterClass="com.orangeleap.tangerine.domain.paymentInfo.Gift">
		insert into GIFT (GIFT_STATUS, GIFT_TYPE, AMOUNT, ADJUSTED_AMOUNT, AUTH_CODE, AVS_MESSAGE, 
		CHECK_NUMBER, COMMENTS,
		CURRENCY_CODE, DEDUCTIBLE_AMOUNT, DONATION_DATE, ENTRY_TYPE,
		PAYMENT_MESSAGE, PAYMENT_STATUS, PAYMENT_TYPE, 
		POSTED, POSTED_DATE, POSTMARK_DATE,  
		TRANSACTION_DATE, PAYMENT_TXREFNUM,
		ADDRESS_ID, PAYMENT_SOURCE_ID, CONSTITUENT_ID, PHONE_ID,
		CREATE_DATE, UPDATE_DATE
		)
		values (#giftStatus#, #giftType#, #amount#, #adjustedAmount#, #authCode#, #avsMessage#, 
		#checkNumber#, #comments#, 
		#currencyCode#,	#deductibleAmount#, #donationDate#, #entryType#,
		#paymentMessage#, #paymentStatus#, #paymentType#, 
		#posted#, #postedDate#, #postmarkDate#,
		#transactionDate#, #txRefNum#, 
		#address.id#, #paymentSource.id#, #constituent.id#, #phone.id#,
		now(), now())
		<selectKey keyProperty="id" resultClass="long">
			SELECT LAST_INSERT_ID() AS value
		</selectKey>
	</insert>
	
	<update id="UPDATE_GIFT" parameterClass="com.orangeleap.tangerine.domain.paymentInfo.Gift">
		update GIFT g, CONSTITUENT p
		set 
		g.GIFT_STATUS = #giftStatus#, 
		g.GIFT_TYPE = #giftType#, 
		g.AMOUNT = #amount#,
		g.ADJUSTED_AMOUNT = #adjustedAmount#,
		g.AUTH_CODE = #authCode#,
		g.AVS_MESSAGE = #avsMessage#, 
		g.CHECK_NUMBER = #checkNumber#,
		g.COMMENTS = #comments#,
		g.CURRENCY_CODE = #currencyCode#,
		g.DEDUCTIBLE_AMOUNT = #deductibleAmount#,
		g.DONATION_DATE = #donationDate#,
		g.ENTRY_TYPE = #entryType#,
		g.PAYMENT_MESSAGE = #paymentMessage#,
		g.PAYMENT_STATUS = #paymentStatus#,
		g.PAYMENT_TYPE = #paymentType#,
		g.POSTED = #posted#,
		g.POSTED_DATE = #postedDate#,
		g.POSTMARK_DATE = #postmarkDate#,
		g.TRANSACTION_DATE = #transactionDate#,
		g.PAYMENT_TXREFNUM = #txRefNum#,
		g.ADDRESS_ID = #address.id#,
		g.PAYMENT_SOURCE_ID = #paymentSource.id#,
		g.CONSTITUENT_ID = #constituent.id#,
		g.PHONE_ID = #phone.id#,
		g.UPDATE_DATE = now()
		where 
		p.CONSTITUENT_ID = g.CONSTITUENT_ID
		and p.SITE_NAME = #site.name#
		and g.GIFT_ID = #id#
	</update>

</sqlMap>