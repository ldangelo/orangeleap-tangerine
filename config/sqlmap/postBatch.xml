<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="POST_BATCH">

    <resultMap id="POST_BATCH_RESULT_NO_ENTRIES" class="com.orangeleap.tangerine.domain.PostBatch" groupBy="id">
        <result property="id" column="POST_BATCH_POST_BATCH_ID" />
        <result property="batchDesc" column="POST_BATCH_POST_BATCH_DESC" />
        <result property="batchType" column="POST_BATCH_ENTITY" />
        <result property="batchCreatedById" column="POST_BATCH_CREATED_BY_ID" />
        <result property="batchCreatedDate" column="POST_BATCH_CREATED_DATE" />
        <result property="executed" column="POST_BATCH_EXECUTED" />
        <result property="executedById" column="POST_BATCH_EXECUTED_BY_ID" />
        <result property="executedByUser" column="POST_BATCH_EXECUTED_BY_USER" />
        <result property="executedDate" column="POST_BATCH_EXECUTED_DATE" />
        <result property="posted" column="POST_BATCH_POSTED" />
        <result property="postedById" column="POST_BATCH_POSTED_BY_ID" />
        <result property="postedDate" column="POST_BATCH_POSTED_DATE" />
        <result property="siteName" column="POST_BATCH_SITE_NAME" />
        <result property="createDate" column="POST_BATCH_CREATE_DATE" />
        <result property="updateDate" column="POST_BATCH_UPDATE_DATE" />
    </resultMap>

    <resultMap id="POST_BATCH_RESULT" class="com.orangeleap.tangerine.domain.PostBatch" groupBy="id" extends="POST_BATCH_RESULT_NO_ENTRIES">
        <result property="postBatchEntries" resultMap="POST_BATCH_ENTRY.POST_BATCH_ENTRY_RESULT" />
    </resultMap>
    
    <sql id="POST_BATCH_COLS_FRAGMENT">
        post_batch.POST_BATCH_ID as POST_BATCH_POST_BATCH_ID,
        post_batch.POST_BATCH_DESC as POST_BATCH_POST_BATCH_DESC,
        post_batch.ENTITY as POST_BATCH_ENTITY,
        post_batch.BATCH_CREATED_BY_ID as POST_BATCH_CREATED_BY_ID,
        post_batch.BATCH_CREATED_DATE as POST_BATCH_CREATED_DATE,
        post_batch.EXECUTED as POST_BATCH_EXECUTED,
        post_batch.EXECUTED_BY_ID as POST_BATCH_EXECUTED_BY_ID,
        post_batch.EXECUTED_DATE as POST_BATCH_EXECUTED_DATE,
        post_batch.POSTED as POST_BATCH_POSTED,
        post_batch.POSTED_BY_ID as POST_BATCH_POSTED_BY_ID,
        post_batch.POSTED_DATE as POST_BATCH_POSTED_DATE,
        post_batch.SITE_NAME as POST_BATCH_SITE_NAME,
        post_batch.CREATE_DATE as POST_BATCH_CREATE_DATE,
        post_batch.UPDATE_DATE as POST_BATCH_UPDATE_DATE,
        constituent.LOGIN_ID as POST_BATCH_EXECUTED_BY_USER
    </sql>

    <sql id="SELECT_POST_BATCH_FRAGMENT">
        select
        <include refid="POST_BATCH_COLS_FRAGMENT"/>
        from POST_BATCH post_batch
        left outer join CONSTITUENT constituent on post_batch.EXECUTED_BY_ID = constituent.CONSTITUENT_ID
        where post_batch.SITE_NAME = #siteName#
    </sql>

    <select id="SELECT_POST_BATCHES" resultMap="POST_BATCH_RESULT_NO_ENTRIES" parameterClass="map">
        <include refid="SELECT_POST_BATCH_FRAGMENT"/>
        order by post_batch.CREATE_DATE desc;
    </select>

    <select id="SELECT_POST_BATCH_BY_ID" resultMap="POST_BATCH_RESULT" parameterClass="map">
        select
        <include refid="POST_BATCH_COLS_FRAGMENT"/>,
        <include refid="POST_BATCH_ENTRY_COLS_FRAGMENT" />

        from POST_BATCH post_batch
        left outer join CONSTITUENT constituent on post_batch.EXECUTED_BY_ID = constituent.CONSTITUENT_ID
        left outer join POST_BATCH_ENTRY pbs on pbs.POST_BATCH_ID = post_batch.POST_BATCH_ID

        where post_batch.SITE_NAME = #siteName#
        and post_batch.POST_BATCH_ID = #id#
    </select>

    <select id="SELECT_LIMITED_POST_BATCHES" resultMap="POST_BATCH_RESULT_NO_ENTRIES" parameterClass="map">
        <include refid="SELECT_POST_BATCH_FRAGMENT"/>
        and post_batch.EXECUTED = #showRanBatches#
        order by
        CASE WHEN IFNULL($sortColumn$,'')='' THEN 1 ELSE 0 END ASC,
		$sortColumn$ + '0' $sortDir$, $sortColumn$ $sortDir$
        limit $offset$, $limit$
    </select>

    <delete id="DELETE_POST_BATCH" parameterClass="map">
        delete from POST_BATCH 
        where SITE_NAME = #siteName#
        and POST_BATCH_ID = #postBatch.id#
    </delete>

    <insert id="INSERT_POST_BATCH" parameterClass="com.orangeleap.tangerine.domain.PostBatch">
        insert into POST_BATCH (
        	POST_BATCH_ID,
        	POST_BATCH_DESC,
        	ENTITY,
        	BATCH_CREATED_BY_ID,
        	BATCH_CREATED_DATE,
            EXECUTED,
            EXECUTED_BY_ID,
            EXECUTED_DATE,
        	POSTED,
        	POSTED_BY_ID,
        	POSTED_DATE,
        	SITE_NAME,
        	CREATE_DATE,
        	UPDATE_DATE )
        values (
        	#id# ,
        	#batchDesc# ,
        	#batchType# ,
        	#batchCreatedById# ,
        	#batchCreatedDate# ,
            #executed# ,
            #executedById# ,
            #executedDate# ,
        	#posted# ,
        	#postedById# ,
        	#postedDate# ,
        	#siteName# ,
        	now(),
        	now()        )
        <selectKey keyProperty="id" resultClass="long">
            SELECT LAST_INSERT_ID() AS value
        </selectKey>
    </insert>

    <update id="UPDATE_POST_BATCH" parameterClass="com.orangeleap.tangerine.domain.PostBatch">
        update POST_BATCH
        SET
        	POST_BATCH_ID = #id# ,
        	POST_BATCH_DESC = #batchDesc# ,
        	ENTITY = #batchType# ,
        	BATCH_CREATED_BY_ID = #batchCreatedById# ,
        	BATCH_CREATED_DATE = #batchCreatedDate# ,
            EXECUTED = #executed# ,
            EXECUTED_BY_ID = #executedById# ,
            EXECUTED_DATE = #executedDate# ,
        	POSTED = #posted# ,
        	POSTED_BY_ID = #postedById# ,
        	POSTED_DATE = #postedDate# ,
        	SITE_NAME = #siteName# ,
        	UPDATE_DATE = now()
        where POST_BATCH_ID = #id#
    </update>

</sqlMap>

