<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="POST_BATCH_REVIEW_SET_ITEM">

    <resultMap id="POST_BATCH_REVIEW_SET_ITEM_RESULT" class="com.orangeleap.tangerine.domain.PostBatchReviewSetItem">
        <result property="id" column="POST_BATCH_REVIEW_SET_ITEM_POST_BATCH_REVIEW_SET_ITEM_ID" />
        <result property="postBatchId" column="POST_BATCH_REVIEW_SET_ITEM_POST_BATCH_ID" />
        <result property="entityId" column="POST_BATCH_REVIEW_SET_ITEM_ENTITY_ID" />
        <result property="createDate" column="POST_BATCH_REVIEW_SET_ITEM_CREATE_DATE" />
        <result property="updateDate" column="POST_BATCH_REVIEW_SET_ITEM_UPDATE_DATE" />
    </resultMap>

    <sql id="POST_BATCH_REVIEW_SET_ITEM_COLS_FRAGMENT">
        post_batch_review_set_item.POST_BATCH_REVIEW_SET_ITEM_ID as POST_BATCH_REVIEW_SET_ITEM_POST_BATCH_REVIEW_SET_ITEM_ID,
        post_batch_review_set_item.POST_BATCH_ID as POST_BATCH_REVIEW_SET_ITEM_POST_BATCH_ID,
        post_batch_review_set_item.ENTITY_ID as POST_BATCH_REVIEW_SET_ITEM_ENTITY_ID,
        post_batch_review_set_item.CREATE_DATE as POST_BATCH_REVIEW_SET_ITEM_CREATE_DATE,
        post_batch_review_set_item.UPDATE_DATE as POST_BATCH_REVIEW_SET_ITEM_UPDATE_DATE
    </sql>

    <sql id="SELECT_POST_BATCH_REVIEW_SET_ITEM_FRAGMENT">
        select
        <include refid="POST_BATCH_REVIEW_SET_ITEM_COLS_FRAGMENT"/>
        from POST_BATCH_REVIEW_SET_ITEM post_batch_review_set_item
    </sql>

    <select id="SELECT_POST_BATCH_REVIEW_SET_ITEMS" resultMap="POST_BATCH_REVIEW_SET_ITEM_RESULT" parameterClass="map" >
        <include refid="SELECT_POST_BATCH_REVIEW_SET_ITEM_FRAGMENT"/>
        where post_batch_review_set_item.POST_BATCH_ID = #postBatchId#
    </select>

    <select id="SELECT_POST_BATCH_REVIEW_SET_SIZE" resultClass="java.lang.Long" parameterClass="map">
        select
        count(*) CNT
        from POST_BATCH_REVIEW_SET_ITEM post_batch_review_set_item
        where
        post_batch_review_set_item.POST_BATCH_ID = #postBatchId#
    </select>
 
    <delete id="DELETE_POST_BATCH_REVIEW_SET_ITEMS" parameterClass="map" >
        delete from POST_BATCH_REVIEW_SET_ITEM
        where POST_BATCH_ID = #postBatchId#
    </delete>

    <insert id="INSERT_POST_BATCH_REVIEW_SET_ITEM" parameterClass="com.orangeleap.tangerine.domain.PostBatchReviewSetItem">
        insert into POST_BATCH_REVIEW_SET_ITEM (
        	POST_BATCH_ID,
        	ENTITY_ID,
        	CREATE_DATE,
        	UPDATE_DATE        )
        values (
        	#postBatchId# ,
        	#entityId# ,
        	now(),
        	now()        )
        <selectKey keyProperty="id" resultClass="long">
            SELECT LAST_INSERT_ID() AS value
        </selectKey>
    </insert>

    <update id="UPDATE_POST_BATCH_REVIEW_SET_ITEM" parameterClass="com.orangeleap.tangerine.domain.PostBatchReviewSetItem">
        update POST_BATCH_REVIEW_SET_ITEM
        SET
        	POST_BATCH_REVIEW_SET_ITEM_ID = #id# ,
        	POST_BATCH_ID = #postBatchId# ,
        	ENTITY_ID = #entityId# ,
        	UPDATE_DATE = now()
        where POST_BATCH_REVIEW_SET_ITEM_ID = #id#
    </update>

	<sql id="SELECT_INTO_FRAG_1">
        insert into POST_BATCH_REVIEW_SET_ITEM (
        	POST_BATCH_ID,
        	CREATE_DATE,
        	UPDATE_DATE,
        	ENTITY_ID
        )
        select
        	#postBatchId#,
        	now(),
        	now(),
	</sql>
	
    <insert id="INSERT_POST_BATCH_REVIEW_SET_ITEM_FROM_GIFT_SELECT" parameterClass="map">
        <include refid="SELECT_INTO_FRAG_1"/>
        	g.GIFT_ID
        from GIFT g, CONSTITUENT c
        where 
        g.CONSTITUENT_ID = c.CONSTITUENT_ID 
        and c.SITE_NAME = #siteName#
        and g.GIFT_TYPE != 'GIFT_IN_KIND'
        <isNotNull property="amountLessThan"> 
        and g.AMOUNT &lt; #amountLessThan#
        </isNotNull>
        <isNotNull property="amountGreaterThan"> 
        and g.AMOUNT &gt; #amountGreaterThan#
        </isNotNull>
        <isNotNull property="currencyCode"> 
        and g.CURRENCY_CODE = #currencyCode#
        </isNotNull>
        <isNotNull property="createdDateBefore"> 
        and g.CREATE_DATE &lt; #createdDateBefore#
        </isNotNull>
        <isNotNull property="createdDateAfter"> 
        and g.CREATE_DATE &gt; #createdDateAfter#
        </isNotNull>
        <isNotNull property="constituentId"> 
        and g.CONSTITUENT_ID = #constituentId#
        </isNotNull>
        <isNotNull property="status"> 
        and g.GIFT_STATUS = #status#
        </isNotNull>
        <isNotNull property="paymentType"> 
        and g.PAYMENT_TYPE = #paymentType#
        </isNotNull>
        <isNotNull property="donationDate"> 
        and g.DONATION_DATE = #donationDate#
        </isNotNull>
        <isNotNull property="postmarkDate"> 
        and g.POSTMARK_DATE = #postmarkDate#
        </isNotNull>
        <isNotNull property="source"> 
        and exists ( 
        select 1 from CUSTOM_FIELD cf
        where cf.ENTITY_TYPE = 'gift' and cf.ENTITY_ID = g.GIFT_ID
        and cf.FIELD_NAME = 'source' and cf.FIELD_VALUE = #source#
        )
        </isNotNull>
        <isNotNull property="designationCode"> 
        and exists ( 
        select 1 from DISTRIBUTION_LINE dl1
        where dl1.GIFT_ID = g.GIFT_ID
        and dl1.PROJECT_CODE = #designationCode#
        )
        </isNotNull>
        <isNotNull property="motivationCode"> 
        and exists ( 
        select 1 from DISTRIBUTION_LINE dl2
        where dl2.GIFT_ID = g.GIFT_ID
        and dl2.MOTIVATION_CODE = #motivationCode#
        )
        </isNotNull>
        <isNotNull property="posted"> 
        and g.POSTED = #posted#
        </isNotNull>
        ;
    </insert>

    <insert id="INSERT_POST_BATCH_REVIEW_SET_ITEM_FROM_ADJUSTED_GIFT_SELECT" parameterClass="map">
        <include refid="SELECT_INTO_FRAG_1"/>
        	ag.ADJUSTED_GIFT_ID
        from ADJUSTED_GIFT ag, GIFT g, CONSTITUENT c
        where 
        ag.GIFT_ID = g.GIFT_ID 
        and ag.CONSTITUENT_ID = c.CONSTITUENT_ID 
        and c.SITE_NAME = #siteName#
        <isNotNull property="amountLessThan"> 
        and ag.ADJUSTED_AMOUNT &lt; #amountLessThan#
        </isNotNull>
        <isNotNull property="amountGreaterThan"> 
        and ag.ADJUSTED_AMOUNT &gt; #amountGreaterThan#
        </isNotNull>
        <isNotNull property="currencyCode"> 
        and g.CURRENCY_CODE = #currencyCode#
        </isNotNull>
        <isNotNull property="createdDateBefore"> 
        and ag.CREATE_DATE &lt; #createdDateBefore#
        </isNotNull>
        <isNotNull property="createdDateAfter"> 
        and ag.CREATE_DATE &gt; #createdDateAfter#
        </isNotNull>
        <isNotNull property="constituentId"> 
        and ag.CONSTITUENT_ID = #constituentId#
        </isNotNull>
        <isNotNull property="status"> 
        and ag.ADJUSTED_STATUS = #status#
        </isNotNull>
        <isNotNull property="paymentType"> 
        and ag.PAYMENT_TYPE = #paymentType#
        </isNotNull>
        <isNotNull property="donationDate"> 
        and g.DONATION_DATE = #donationDate#
        </isNotNull>
        <isNotNull property="postmarkDate"> 
        and g.POSTMARK_DATE = #postmarkDate#
        </isNotNull>
        <isNotNull property="source"> 
        and exists ( 
        select 1 from CUSTOM_FIELD cf
        where cf.ENTITY_TYPE = 'adjustedgift' and cf.ENTITY_ID = g.GIFT_ID
        and cf.FIELD_NAME = 'source' and cf.FIELD_VALUE = #source#
        )
        </isNotNull>
        <isNotNull property="designationCode"> 
        and exists ( 
        select 1 from DISTRIBUTION_LINE dl1
        where dl1.ADJUSTED_GIFT_ID = ag.ADJUSTED_GIFT_ID
        and dl1.PROJECT_CODE = #designationCode#
        )
        </isNotNull>
        <isNotNull property="motivationCode"> 
        and exists ( 
        select 1 from DISTRIBUTION_LINE dl2
        where dl2.ADJUSTED_GIFT_ID = ag.ADJUSTED_GIFT_ID
        and dl2.MOTIVATION_CODE = #motivationCode#
        )
        </isNotNull>
        <isNotNull property="posted"> 
        and ag.POSTED = #posted#
        </isNotNull>
        ;
    </insert>


</sqlMap>

