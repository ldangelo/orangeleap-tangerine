<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//ibatis.apache.org//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="RECURRING_GIFT">

	<resultMap id="RECURRING_GIFT_RESULT" class="com.orangeleap.tangerine.domain.paymentInfo.RecurringGift" groupBy="id">
		<result property="id" column="RECURRING_GIFT_ID" jdbcType="BIGINT" />
		<result property="nextRunDate" column="NEXT_RUN_DATE" jdbcType="TIMESTAMP" />
		<result property="amountPerGift" column="AMOUNT_PER_GIFT" jdbcType="DECIMAL" />
		<result property="amountTotal" column="AMOUNT_TOTAL" jdbcType="DECIMAL" />
		<result property="amountPaid" column="AMOUNT_PAID" jdbcType="DECIMAL" />
		<result property="amountRemaining" column="AMOUNT_REMAINING" jdbcType="DECIMAL" />
		<result property="autoPay" column="AUTO_PAY" jdbcType="CHAR" />
		<result property="checkNumber" column="CHECK_NUMBER" jdbcType="VARCHAR" />
		<result property="comments" column="COMMENTS" jdbcType="VARCHAR" />
		<result property="createDate" column="CREATE_DATE" jdbcType="TIMESTAMP" />
		<result property="currencyCode" column="CURRENCY_CODE" jdbcType="VARCHAR" />
		<result property="endDate" column="END_DATE" jdbcType="TIMESTAMP" />
		<result property="frequency" column="FREQUENCY" jdbcType="VARCHAR" />
		<result property="activate" column="ACTIVATE" jdbcType="CHAR" />
		<result property="paymentType" column="PAYMENT_TYPE" jdbcType="VARCHAR" />
		<result property="startDate" column="START_DATE" jdbcType="TIMESTAMP" />
		<result property="recurringGiftStatus" column="RECURRING_GIFT_STATUS" jdbcType="VARCHAR" />
		<result property="updateDate" column="UPDATE_DATE" jdbcType="TIMESTAMP" />
		<result property="address" resultMap="ADDRESS.ADDRESS_RESULT" />
		<result property="phone" resultMap="PHONE.PHONE_RESULT" />
		<result property="paymentSource" resultMap="PAYMENT_SOURCE.PAYMENT_SOURCE_RESULT" />
		<result property="constituent" resultMap="CONSTITUENT.CONSTITUENT_RESULT" />
		<result property="distributionLines" resultMap="DISTRO_LINE.DISTRO_LINE_RESULT" />
	</resultMap>
	
	<sql id="RECURRING_GIFT_COLS_FRAGMENT">
		rg.RECURRING_GIFT_ID, rg.NEXT_RUN_DATE, rg.AMOUNT_PER_GIFT, rg.AMOUNT_TOTAL, rg.AMOUNT_PAID, rg.AMOUNT_REMAINING, rg.AUTO_PAY,
		rg.CHECK_NUMBER, rg.COMMENTS, rg.CREATE_DATE, rg.CURRENCY_CODE, rg.END_DATE, rg.FREQUENCY, rg.ACTIVATE, 
	    rg.PAYMENT_TYPE, rg.START_DATE,
		rg.RECURRING_GIFT_STATUS, rg.UPDATE_DATE
	</sql>
	
	<sql id="SELECT_RECURRING_GIFT_FRAGMENT">
		select 
		<include refid="RECURRING_GIFT_COLS_FRAGMENT" />,
		<include refid="CONSTITUENT_COLS_FRAGMENT" />,
		<include refid="ADDRESS_COLS_FRAGMENT" />,
		<include refid="PHONE_COLS_FRAGMENT" />	,
		<include refid="PAYMENT_SRC_COLS_FRAGMENT" />,
		<include refid="DISTRO_LINE_COLS_FRAGMENT" />
		
		from RECURRING_GIFT rg
		inner join CONSTITUENT p on rg.CONSTITUENT_ID = p.CONSTITUENT_ID
		left outer join PHONE ph on rg.PHONE_ID = ph.PHONE_ID
		left outer join ADDRESS addr on rg.ADDRESS_ID = addr.ADDRESS_ID
		left outer join PAYMENT_SOURCE ps on rg.PAYMENT_SOURCE_ID = ps.PAYMENT_SOURCE_ID
		left outer join DISTRO_LINE dl on rg.RECURRING_GIFT_ID = dl.RECURRING_GIFT_ID
		where
		p.SITE_NAME= #siteName#
	</sql>
	
	<sql id="RECURRING_GIFT_ROWCOUNT_FRAGMENT">
        select count(*)
		from RECURRING_GIFT rg
		inner join CONSTITUENT p on rg.CONSTITUENT_ID = p.CONSTITUENT_ID
        where p.SITE_NAME = #siteName#
    </sql>
	

	<select id="SELECT_RECURRING_GIFT_BY_ID" resultMap="RECURRING_GIFT_RESULT" parameterClass="map">
		<include refid="SELECT_RECURRING_GIFT_FRAGMENT" />
		and rg.RECURRING_GIFT_ID = #id#
	</select>

	<select id="SELECT_RECURRING_GIFTS_BY_CONSTITUENT_ID" resultMap="RECURRING_GIFT_RESULT" parameterClass="map">
		<include refid="SELECT_RECURRING_GIFT_FRAGMENT" />
		and p.CONSTITUENT_ID = #constituentId#
		order by rg.CREATE_DATE desc
	</select>
	
	<select id="SELECT_RECURRING_GIFTS_BY_CONSTITUENT_ID_PAGINATED" resultMap="RECURRING_GIFT_RESULT" parameterClass="map">
		select 
		<include refid="RECURRING_GIFT_COLS_FRAGMENT" />,
		<include refid="CONSTITUENT_COLS_FRAGMENT" />,
		<include refid="ADDRESS_COLS_FRAGMENT" />,
		<include refid="PHONE_COLS_FRAGMENT" />	,
		<include refid="PAYMENT_SRC_COLS_FRAGMENT" />,
		<include refid="DISTRO_LINE_COLS_FRAGMENT" />,
		IF ($sortColumn$ IS NULL or $sortColumn$ = '', 1, 0) AS isnull
		
		from RECURRING_GIFT rg
		inner join CONSTITUENT p on rg.CONSTITUENT_ID = p.CONSTITUENT_ID
		left outer join PHONE ph on rg.PHONE_ID = ph.PHONE_ID
		left outer join ADDRESS addr on rg.ADDRESS_ID = addr.ADDRESS_ID
		left outer join PAYMENT_SOURCE ps on rg.PAYMENT_SOURCE_ID = ps.PAYMENT_SOURCE_ID
		left outer join DISTRO_LINE dl on rg.RECURRING_GIFT_ID = dl.RECURRING_GIFT_ID

		where
		p.SITE_NAME= #siteName#
		and rg.CONSTITUENT_ID = #constituentId#

		order by 
		isnull ASC,
		$sortColumn$ $sortDir$
        limit $offset$,$limit$
	</select>
	
	<select id="RECURRING_GIFTS_BY_CONSTITUENT_ID_ROWCOUNT" resultClass="long" parameterClass="map" >
        <include refid="RECURRING_GIFT_ROWCOUNT_FRAGMENT"/>
		and rg.CONSTITUENT_ID = #constituentId#
    </select>

	<select id="SELECT_RECURRING_GIFTS_ON_OR_AFTER_DATE" resultMap="RECURRING_GIFT_RESULT" parameterClass="map">
		<include refid="SELECT_RECURRING_GIFT_FRAGMENT" />
		
		and (rg.END_DATE &gt;= #date# or rg.END_DATE is null)
		and rg.RECURRING_GIFT_STATUS in
    	<iterate property="statuses" conjunction="," open="(" close=")">
			#statuses[]#
		</iterate>
	</select>
  
	<insert id="INSERT_RECURRING_GIFT" parameterClass="com.orangeleap.tangerine.domain.paymentInfo.RecurringGift">
		insert into RECURRING_GIFT (NEXT_RUN_DATE, AMOUNT_PER_GIFT, AMOUNT_TOTAL, AMOUNT_PAID, AMOUNT_REMAINING, 
		AUTO_PAY, CHECK_NUMBER, COMMENTS, CREATE_DATE, CURRENCY_CODE,
		END_DATE, FREQUENCY, ACTIVATE,  PAYMENT_TYPE,
		START_DATE, RECURRING_GIFT_STATUS, UPDATE_DATE,
		ADDRESS_ID, PAYMENT_SOURCE_ID, CONSTITUENT_ID, PHONE_ID)
		values (#nextRunDate#, #amountPerGift#, #amountTotal#, #amountPaid#, #amountRemaining#, 
		#autoPay#, #checkNumber#, #comments#, now(), #currencyCode#, 
		#endDate#, #frequency#, #activate#,  #paymentType#,
		#startDate#, #recurringGiftStatus#, now(), 
		#address.id#, #paymentSource.id#, #constituent.id#, #phone.id#)
		<selectKey keyProperty="id" resultClass="long">
			SELECT LAST_INSERT_ID() AS value
		</selectKey>
	</insert>

	<update id="UPDATE_RECURRING_GIFT" parameterClass="com.orangeleap.tangerine.domain.paymentInfo.RecurringGift">
		update RECURRING_GIFT
		set NEXT_RUN_DATE = #nextRunDate#,
		AMOUNT_PER_GIFT = #amountPerGift#,
		AMOUNT_TOTAL = #amountTotal#,
		AMOUNT_PAID = #amountPaid#,
		AMOUNT_REMAINING = #amountRemaining#,
		AUTO_PAY = #autoPay#,
		CHECK_NUMBER = #checkNumber#,
		COMMENTS = #comments#,
		CURRENCY_CODE = #currencyCode#,
		END_DATE = #endDate#,
		FREQUENCY = #frequency#,
		ACTIVATE = #activate#,
		PAYMENT_TYPE = #paymentType#,
		RECURRING_GIFT_STATUS = #recurringGiftStatus#,
		START_DATE = #startDate#,
		UPDATE_DATE = now(),
		ADDRESS_ID = #address.id#,
		PAYMENT_SOURCE_ID = #paymentSource.id#,
		CONSTITUENT_ID = #constituent.id#,
		PHONE_ID = #phone.id#
		where RECURRING_GIFT_ID = #id#
	</update>
	
	<update id="UPDATE_RECURRING_GIFT_AMOUNT_PAID_REMAINING_STATUS" parameterClass="com.orangeleap.tangerine.domain.paymentInfo.RecurringGift">
		update RECURRING_GIFT
		set 
		AMOUNT_PAID = #amountPaid#,
		AMOUNT_REMAINING = #amountRemaining#,
		RECURRING_GIFT_STATUS = #recurringGiftStatus#,
		UPDATE_DATE = now()
		where RECURRING_GIFT_ID = #id#
	</update>
	
	<update id="UPDATE_RECURRING_GIFT_NEXT_RUN_DATE" parameterClass="com.orangeleap.tangerine.domain.paymentInfo.RecurringGift">
		update RECURRING_GIFT
		set 
		NEXT_RUN_DATE = #nextRunDate#,
		UPDATE_DATE = now()
		where RECURRING_GIFT_ID = #id#
	</update>
  
	<delete id="DELETE_RECURRING_GIFT" parameterClass="map">
		delete from RECURRING_GIFT 
		where RECURRING_GIFT_ID = #id#
	</delete>
	
  	<statement id="SELECT_RECURRING_GIFT_BY_SEARCH_TERMS" resultMap="RECURRING_GIFT_RESULT" parameterClass="map">
		<include refid="SELECT_RECURRING_GIFT_FRAGMENT"/>
		<isNotNull property="stringParams"> 
		   <iterate property="stringParams" conjunction="and" open="and" close="">
		   rg.$stringParams[].key$ like #stringParams[].value#
		   </iterate>
		</isNotNull>
		<isNotNull property="nonStringParams"> 
		   <iterate property="nonStringParams" conjunction="and" open="and" close="">
		   rg.$nonStringParams[].key$ = #nonStringParams[].value#
		   </iterate>
		</isNotNull>
		<isNotNull property="refConstituentParams"> 
		   <iterate property="refConstituentParams" conjunction="and" open="and" close="">
		   p.$refConstituentParams[].key$ like #refConstituentParams[].value#
		   </iterate>
		</isNotNull>
		<isNotNull property="phoneParams"> 
		   and exists (
		    select * from PHONE sph where 
		    sph.CONSTITUENT_ID = p.CONSTITUENT_ID
		    <iterate property="phoneParams" conjunction="and" open="and" close="">
		    sph.$phoneParams[].key$ like #phoneParams[].value#
		    </iterate>
		   )
		</isNotNull>
		<isNotNull property="addressParams"> 
		   and exists (
		    select * from ADDRESS saddr where 
		    saddr.CONSTITUENT_ID = p.CONSTITUENT_ID
		    <iterate property="addressParams" conjunction="and" open="and" close="">
		    saddr.$addressParams[].key$ like #addressParams[].value#
		    </iterate>
		   )
		</isNotNull>
		<isNotNull property="customParams"> 
		   and exists (
		    select * from CUSTOM_FIELD scf where 
		   ((scf.ENTITY_ID = rg.RECURRING_GIFT_ID and scf.ENTITY_TYPE = 'recurringGift') or (scf.ENTITY_ID = p.CONSTITUENT_ID and scf.ENTITY_TYPE = 'constituent'))
		    <iterate property="customParams" conjunction="and" open="and" close="">
		    scf.FIELD_NAME = #customParams[].key# and scf.FIELD_VALUE like #customParams[].value#
		    </iterate>
		   )
		</isNotNull>
		limit 200
	</statement>
  
</sqlMap>