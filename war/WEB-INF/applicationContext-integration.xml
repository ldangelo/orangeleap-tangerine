<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2009. Orange Leap Inc. Active Constituent
  ~ Relationship Management Platform.
  ~
  ~ This program is free software: you can redistribute it and/or modify
  ~ it under the terms of the GNU General Public License as published by
  ~ the Free Software Foundation, either version 3 of the License, or
  ~ (at your option) any later version.
  ~
  ~ This program is distributed in the hope that it will be useful,
  ~ but WITHOUT ANY WARRANTY; without even the implied warranty of
  ~ MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  ~ GNU General Public License for more details.
  ~
  ~ You should have received a copy of the GNU General Public License
  ~ along with this program.  If not, see <http://www.gnu.org/licenses/>.
  -->

<beans:beans xmlns="http://www.springframework.org/schema/integration"
             xmlns:si-xml="http://www.springframework.org/schema/integration/xml"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:jms="http://www.springframework.org/schema/integration/jms"
             xmlns:stream="http://www.springframework.org/schema/integration/stream"
             xmlns:amq="http://activemq.apache.org/schema/core"
             xsi:schemaLocation="http://www.springframework.org/schema/beans	http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
			http://www.springframework.org/schema/integration  			http://www.springframework.org/schema/integration/spring-integration-1.0.xsd
			http://www.springframework.org/schema/integration/jms  			http://www.springframework.org/schema/integration/jms/spring-integration-jms-1.0.xsd
			http://www.springframework.org/schema/integration/xml http://www.springframework.org/schema/integration/xml/spring-integration-xml-1.0.xsd
			http://www.springframework.org/schema/integration/stream	http://www.springframework.org/schema/integration/stream/spring-integration-stream-1.0.xsd
			http://activemq.apache.org/schema/core http://activemq.apache.org/schema/core/activemq-core.xsd">

<!--
    <amq:broker useJmx="true" persistent="false">
        <amq:transportConnectors>
            <amq:transportConnector uri="tcp://localhost:0"/>
        </amq:transportConnectors>
    </amq:broker> 
-->
    <amq:connectionFactory id="connectionFactory" brokerURL="discovery:(multicast://default)?initialReconnectDelay=100"/>


    <!--
	We neeed to use topic's here so that multiple consumer's can consume these messages.
	
	Topics are pub/sub (can have multiple consumer's receive the same message)
	Queues are point to point (one consumer get's the message)
	
	By default Topic's don't 'persist'.  We will use the configuration within activemq to convert 'topic' messages into 'queue' messages
    -->
    <beans:bean id="GiftDestination" class="org.apache.activemq.command.ActiveMQTopic">
        <beans:constructor-arg value="orangeleap.tangerine.gift"/>
    </beans:bean>

    <beans:bean id="ConstituentDestination" class="org.apache.activemq.command.ActiveMQTopic">
        <beans:constructor-arg value="orangeleap.tangerine.constituent"/>
    </beans:bean>

    <gateway id="newConstituent" service-interface="com.orangeleap.tangerine.integration.NewConstituent"/>

    <gateway id="newGift" service-interface="com.orangeleap.tangerine.integration.NewGift"/>
    
    <gateway id="newCommunicationHistory" service-interface="com.orangeleap.tangerine.integration.NewCommunicationHistory"/>
    
    <!--  <gateway id="newConstituent" service-interface="com.orangeleap.tangerine.integration.NewConstituent"/>
 <gateway id="newAddress" service-interface="com.orangeleap.tangerine.integration.NewAddress"/> -->

    <channel id="newGiftChannel"/>
    <channel id="newCommunicationHistoryChannel"/>
    <channel id="newConstituentChannel"/>
    <channel id="newAddressChannel"/>
    <channel id="gift_drools_channel"/>
    <channel id="constituent_drools_channel"/>
    <channel id="constituent_transformer"/>
    <channel id="constituent_marshalling_transformer"/>
    <channel id="gift_transformer"/>
    <channel id="gift_marshalling_transformer"/>
    <channel id="gift_jms_channel"/>
    <channel id="constituent_jms_channel"/>
    <channel id="payment_drools_channel"/>

    <!--<thread-local-channel id="constituent_route_channel"/>-->
    <beans:bean id="constituent_route_channel" class="org.springframework.integration.channel.DirectChannel"/>
    <beans:bean id="gift_route_channel" class="org.springframework.integration.channel.DirectChannel"/>

    <channel id="channel_dev_null"/>

    <service-activator input-channel="gift_drools_channel" ref="GiftDrools" method="doApplyRules"/>
    <service-activator input-channel="payment_drools_channel" ref="PaymentDrools" method="doApplyRules"/>
    <service-activator input-channel="constituent_drools_channel" ref="ConstituentDrools" method="doApplyRules"/>
    <service-activator input-channel="communicationHistory_drools_channel" ref="CommunicationHistoryDrools" method="doApplyRules"/>

    <!--  <service-activator input-channel="constituent_drools_channel" ref="ConstituentDrools" method="doApplyRules"/> -->

    <!--<router id="routerEndpoint" input-channel="newGiftChannel" ref="giftRouter"/>
    <router id="routerEndpointConstituents" input-channel="newConstituentChannel" ref="constituentRouter"/>-->

    <recipient-list-router id="constituentRouter" input-channel="newConstituentChannel">
        <recipient channel="constituent_drools_channel"/>
        <recipient channel="constituent_transformer"/>
    </recipient-list-router>


    <recipient-list-router id="giftRouter" input-channel="newGiftChannel">
        <recipient channel="payment_drools_channel"/>
        <recipient channel="gift_drools_channel"/>
        <recipient channel="gift_transformer"/>
    </recipient-list-router>

    <recipient-list-router id="communicationHistoryRouter" input-channel="newCommunicationHistoryChannel">
        <recipient channel="communicationHistory_drools_channel"/>
        <!-- <recipient channel="communicationHistory_transformer"/> -->
    </recipient-list-router>

    <transformer input-channel="constituent_transformer" output-channel="constituent_marshalling_transformer"
                 ref="constituentToConstituentTransformer"/>
    <transformer input-channel="gift_transformer" output-channel="gift_marshalling_transformer" ref="giftTransformer"/>

    <beans:bean id="marshallingTransformer"
                class="org.springframework.integration.xml.transformer.XmlPayloadMarshallingTransformer">
        <beans:constructor-arg>
            <beans:bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
                <beans:property name="contextPath" value="com.orangeleap.tangerine.ws.schema"/>
            </beans:bean>
        </beans:constructor-arg>
        <beans:constructor-arg>
            <beans:bean class="org.springframework.integration.xml.transformer.ResultToStringTransformer"/>
        </beans:constructor-arg>
    </beans:bean>

    <transformer input-channel="constituent_marshalling_transformer" output-channel="constituent_jms_channel"
                 ref="marshallingTransformer">
    </transformer>
    <transformer input-channel="gift_marshalling_transformer" output-channel="gift_jms_channel"
                 ref="marshallingTransformer"/>

    <beans:bean id="AbstractRulesInterceptor" class="com.orangeleap.tangerine.service.rule.RulesInterceptor"
                abstract="true">
        <beans:constructor-arg value="${drools.host}" index="0"/>
        <beans:constructor-arg value="${drools.port}" index="1"/>
    </beans:bean>

    <beans:bean id="GiftDrools" class="com.orangeleap.tangerine.service.rule.GiftRulesInterceptor"
                parent="AbstractRulesInterceptor"/>

    <beans:bean id="PaymentDrools" class="com.orangeleap.tangerine.service.rule.PaymentRulesInterceptor"/>

    <beans:bean id="ConstituentDrools" class="com.orangeleap.tangerine.service.rule.ConstituentRulesInterceptor"/>

    <beans:bean id="CommunicationHistoryDrools" class="com.orangeleap.tangerine.service.rule.CommunicationHistoryRulesInterceptor"/>

    <beans:bean id="emailInterceptor" class="com.orangeleap.tangerine.service.rule.EmailRulesInterceptor">
        <beans:property name="agendaGroup" value="email"/>
    </beans:bean>

    <beans:bean id="DroolsRuleAgent" class="com.orangeleap.tangerine.service.rule.DroolsRuleAgent">
        <beans:constructor-arg value="${drools.pollinterval}" index="0"/>
        <beans:constructor-arg value="${drools.cachedir}" index="1"/>
        <beans:constructor-arg value="${drools.packagedir}" index="2"/>
    </beans:bean>

    <!--
    <si-xml:xpath-router id="constituentJMSRouter" channel-resolver="constituentMapChannelResolver" multi-channel="true"
                         input-channel="constituent_route_channel" resolution-required="false" default-output-channel="channel_dev_null">
        <si-xml:xpath-expression expression="/constituent/ns2:site/ns2:name" ns-prefix="ns2" ns-uri="http://www.orangeleap.com/orangeleap/services/1.0"/>
    </si-xml:xpath-router>
-->

<!--
    <beans:bean id="constituentJMSRouter" class="org.springframework.integration.endpoint.EventDrivenConsumer">
        <beans:constructor-arg ref="constituent_route_channel"/>
        <beans:constructor-arg>
            <beans:bean class="org.springframework.integration.xml.router.XPathMultiChannelRouter">
                <beans:constructor-arg value="/constituent/ns2:site/ns2:name"/>
                <beans:constructor-arg value="ns2"/>
                <beans:constructor-arg value="http://www.orangeleap.com/orangeleap/services/1.0"/>
                <beans:property name="channelResolver">
                    <beans:bean class="org.springframework.integration.channel.MapBasedChannelResolver">
                        <beans:property name="channelMap">
                            <beans:map>
                                <beans:entry key="company1" value-ref="constituent_jms_channel"/>
                            </beans:map>
                        </beans:property>
                    </beans:bean>
                </beans:property>
                <beans:property name="ignoreChannelNameResolutionFailures" value="true"/>
            </beans:bean>
        </beans:constructor-arg>
    </beans:bean>
    
    <beans:bean id="giftJMSRouter" class="org.springframework.integration.endpoint.EventDrivenConsumer">
        <beans:constructor-arg ref="gift_route_channel"/>
        <beans:constructor-arg>
            <beans:bean class="org.springframework.integration.xml.router.XPathMultiChannelRouter">
                <beans:constructor-arg value="/gift/ns2:site/ns2:name"/>
                <beans:constructor-arg value="ns2"/>
                <beans:constructor-arg value="http://www.orangeleap.com/orangeleap/services/1.0"/>
                <beans:property name="channelResolver">
                    <beans:bean class="org.springframework.integration.channel.MapBasedChannelResolver">
                        <beans:property name="channelMap">
                            <beans:map>
                                <beans:entry key="company1" value-ref="gift_jms_channel"/>
                            </beans:map>
                        </beans:property>
                    </beans:bean>
                </beans:property>
                <beans:property name="ignoreChannelNameResolutionFailures" value="true"/>
            </beans:bean>
        </beans:constructor-arg>
    </beans:bean>
-->
    <jms:outbound-channel-adapter id="ConstituentJms" channel="constituent_jms_channel"
                                  destination="ConstituentDestination"/>
    <jms:outbound-channel-adapter id="GiftJms" channel="gift_jms_channel"
                                  destination="GiftDestination"/>

    <poller id="poller" default="true">
        <interval-trigger interval="1000"/>
    </poller>

</beans:beans>