<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/security"
             xmlns:beans="http://www.springframework.org/schema/beans"
             xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
             xsi:schemaLocation="http://www.springframework.org/schema/beans
                http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                http://www.springframework.org/schema/security
                http://www.springframework.org/schema/security/spring-security-2.0.4.xsd">

    <!-- Enable usage of the @Secured annotation, although not thinking we're using it -->
	<global-method-security secured-annotations="enabled"/>

    <!-- alias to the internal authenticationManager so it can be referenced in bean definitions -->
    <authentication-manager alias="authenticationManager"/>

    <!-- primary configuration for Tangerine -->
    <http entry-point-ref="casProcessingFilterEntryPoint" access-decision-manager-ref="accessDecisionManager">
        <intercept-url pattern="/login*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/logoutSuccess*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/concurrentLogin*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/images/**" filters="none" />
        <intercept-url pattern="/css/login.css" filters="none" />
        <intercept-url pattern="/images/signInBox.gif" filters="none" />
        <intercept-url pattern="/images/orangeleap-logo.jpg" filters="none" />
        <intercept-url pattern="/images/orangeleap-logo.png" filters="none" />
        <intercept-url pattern="/images/orangeleap-logo-tag.jpg" filters="none" />
        <intercept-url pattern="/images/orangeleap-logo-tag.png" filters="none" />
        <intercept-url pattern="/images/favicon.ico" filters="none" />
        <intercept-url pattern="/css/main.css" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/js/jquery/jquery*.js" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/js/jquery.cookie.js" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <intercept-url pattern="/services/**" filters="none" />
        <intercept-url pattern="/**" access="ROLE_USER" />
        <concurrent-session-control max-sessions="1" expired-url="/concurrentLogin.jsp" />
        <anonymous granted-authority="ROLE_ANONYMOUS" key="anonymous" username="anonymous"/>
        <logout invalidate-session="true"  logout-success-url="/logoutSuccess.jsp" logout-url="/logout"/>
    </http>

    <!-- custom AccessDecisionManger that knows how to check PageAccess attributes for a user -->
    <beans:bean id="accessDecisionManager" class="com.orangeleap.tangerine.security.TangerineAffirmativeBased">
		<beans:property name="allowIfAllAbstainDecisions" value="false"/>
		<beans:property name="decisionVoters">
			<beans:list>
				<beans:bean class="org.springframework.security.vote.RoleVoter"/>
				<beans:bean class="org.springframework.security.vote.AuthenticatedVoter"/>
			</beans:list>
		</beans:property>
	</beans:bean>

     <!-- BEGIN CAS Authentication configuration -->
     <beans:bean id="serviceProperties" class="org.springframework.security.ui.cas.ServiceProperties">
        <beans:property name="service" value="${casClient.serviceUrl}/j_spring_cas_security_check"/>
        <beans:property name="sendRenew" value="false"/>
    </beans:bean>

    <beans:bean id="casProcessingFilter" class="org.springframework.security.ui.cas.CasProcessingFilter">
        <custom-filter after="CAS_PROCESSING_FILTER"/>
        <beans:property name="authenticationManager" ref="authenticationManager"/>
        <beans:property name="authenticationFailureUrl" value="/casfailed.jsp"/>
        <beans:property name="defaultTargetUrl" value="/"/>
        <beans:property name="authenticationDetailsSource" ref="customDetails"/>
        <beans:property name="proxyGrantingTicketStorage" ref="proxyGrantingTicketStorage" />
        <beans:property name="proxyReceptorUrl" value="/secure/receptor" />
    </beans:bean>

    <beans:bean id="casProcessingFilterEntryPoint"
                class="org.springframework.security.ui.cas.CasProcessingFilterEntryPoint">
        <beans:property name="loginUrl" value="${casClient.serverUrl.external}/${casClient.serverContextPrefix}${casClient.serverContext}/login"/>
        <beans:property name="serviceProperties" ref="serviceProperties"/>
    </beans:bean>

    <beans:bean id="casAuthenticationProvider"
                class="org.springframework.security.providers.cas.CasAuthenticationProvider">
        <custom-authentication-provider/>
        <beans:property name="userDetailsService" ref="userDetailsService"/>
        <beans:property name="serviceProperties" ref="serviceProperties"/>
        <beans:property name="ticketValidator">
            <beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
                <beans:constructor-arg index="0" value="${casClient.serverUrl}/${casClient.serverContextPrefix}${casClient.serverContext}"/>
                <beans:property name="proxyGrantingTicketStorage" ref="proxyGrantingTicketStorage" />
                <beans:property name="proxyCallbackUrl" value="${casClient.serviceUrl}/secure/receptor" />
            </beans:bean>
        </beans:property>
        <beans:property name="key" value="tangerine-client-key"/>
    </beans:bean>
    
    <beans:bean id="proxyGrantingTicketStorage" class="org.jasig.cas.client.proxy.ProxyGrantingTicketStorageImpl" />

    
    <!-- END CAS Authentication configuration -->

    <!-- This custom filter populates the HTTP Session with information needed by the Tangerine application -->
    <beans:bean id="tangerineFilter" class="com.orangeleap.tangerine.security.TangerineSessionInformationFilter">
        <custom-filter after="EXCEPTION_TRANSLATION_FILTER"/>
    </beans:bean>

     <!-- LDAP Configuration for the ContextSource; needed for other LDAP stuff  -->
    <beans:bean id="contextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
        <beans:constructor-arg value="ldap://${ldap.host}:${ldap.port}/${ldap.root}"/>
        <beans:property name="userDn" value="${ldap.userDn}"/>
        <beans:property name="password" value="${ldap.password}"/>
    </beans:bean>

    <!-- LDAP UserDetails service used by CAS -->
     <beans:bean id="userDetailsService" class="org.springframework.security.userdetails.ldap.LdapUserDetailsService">
        <beans:constructor-arg ref="userSearch"/>
        <beans:constructor-arg ref="authoritiesPopulator"/>
    </beans:bean>

    <!-- BEGIN Custom Authencation Beans - these are used for LDAP and are needed to
          be able to handle credentials in the "name@site" format. These beans override default
          Spring Security beans to correctly parse out the name and site components, and take
          them into account in the LDAP operations -->
    <beans:bean id="customDetails" class="com.orangeleap.tangerine.security.TangerineAuthenticationDetailsSource"/>

    <beans:bean id="userSearch" class="com.orangeleap.tangerine.security.TangerineLdapUserSearch">
        <beans:constructor-arg value="(uid={0})"/>
        <beans:constructor-arg ref="contextSource"/>
    </beans:bean>

    <beans:bean id="authoritiesPopulator" class="com.orangeleap.tangerine.security.TangerineLdapAuthoritiesPopulatorCAS">
        <beans:constructor-arg ref="contextSource"/>
        <beans:constructor-arg value="ou=roles"/>
    	<beans:property name="searchSubtree" value="true"/>
    </beans:bean>
    <!-- END Custom Authentication Beans -->

    <!-- Ensure passwords are encoded with a hash algorithm (SHA-1 in this case) -->
    <beans:bean id="passwordEncoder" class="org.springframework.security.providers.encoding.ShaPasswordEncoder"/>

    <!-- Beans that make use of the LDAP ContextSource -->
    <beans:bean id="ldapTemplate" class="org.springframework.ldap.core.LdapTemplate">
    	<beans:constructor-arg ref="contextSource"/>
	</beans:bean>

    <beans:bean id="ldapService" class="com.orangeleap.tangerine.service.ldap.LdapServiceImpl">
    	<beans:property name="ldapTemplate" ref="ldapTemplate"/>
	</beans:bean>

</beans:beans>
