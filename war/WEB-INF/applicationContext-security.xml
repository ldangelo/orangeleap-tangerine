<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:sec="http://www.springframework.org/schema/security"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd
                        http://www.springframework.org/schema/security http://www.springframework.org/schema/security/spring-security-2.0.2.xsd">

	<sec:global-method-security secured-annotations="enabled" />

    <sec:http entry-point-ref="authenticationProcessingFilterEntryPoint">
        <!-- Restrict URLs based on role -->
        <sec:intercept-url pattern="/login*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <sec:intercept-url pattern="/logoutSuccess*" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <sec:intercept-url pattern="/css/login.css" filters="none" />
        <sec:intercept-url pattern="/images/signInBox.gif" filters="none" />
        <sec:intercept-url pattern="/images/mpowerLogo.gif" filters="none" />
        <sec:intercept-url pattern="/images/favicon.ico" filters="none" />
        <sec:intercept-url pattern="/css/main.css" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <sec:intercept-url pattern="/js/jquery.js" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <sec:intercept-url pattern="/js/jquery.cookie.js" access="IS_AUTHENTICATED_ANONYMOUSLY" />
        <sec:intercept-url pattern="/**" access="ROLE_USER" />

        <sec:concurrent-session-control max-sessions="1" exception-if-maximum-exceeded="true"/>
    </sec:http>

    <bean id="logoutFilter" class="org.springframework.security.ui.logout.LogoutFilter">
        <constructor-arg value="/logoutSuccess.jsp"/>
        <constructor-arg>
            <list>
                <bean class="org.springframework.security.ui.logout.SecurityContextLogoutHandler"/>
            </list>
        </constructor-arg>
        <property name="filterProcessesUrl" value="/logout"/>
        <sec:custom-filter position="LOGOUT_FILTER"/>
    </bean>

    <bean id="mpowerAuthenticationProcessingFilter" class="com.mpower.security.MpowerAuthenticationProcessingFilter">
        <property name="authenticationManager" ref="authenticationManager"/>
        <property name="authenticationFailureUrl" value="/login.jsp?login_error=1"/>
        <property name="defaultTargetUrl" value="/index.jsp"/>
        <property name="filterProcessesUrl" value="/loginProcess"/>
        <property name="pageCustomizationService" ref="pageCustomizationService"/>
        <sec:custom-filter position="AUTHENTICATION_PROCESSING_FILTER"/>
    </bean>

    <bean id="anonymousProcessingFilter" class="org.springframework.security.providers.anonymous.AnonymousProcessingFilter">
        <property name="key" value="anonymous"/>
        <property name="userAttribute" value="anonymous,ROLE_ANONYMOUS"/>
        <sec:custom-filter position="ANONYMOUS_FILTER"/>
    </bean>

    <bean id="authenticationProcessingFilterEntryPoint" class="org.springframework.security.ui.webapp.AuthenticationProcessingFilterEntryPoint">
        <property name="loginFormUrl" value="/login.jsp"/>
        <property name="forceHttps" value="false"/>
    </bean>

    <bean id="authenticationManager" class="org.springframework.security.providers.ProviderManager">
        <property name="providers">
            <list>
                <ref local="mpowerAuthenticationProvider"/>
                <ref local="anonymousAuthenticationProvider"/>
            </list>
        </property>
        <property name="sessionController" ref="concurrentSessionController"/>
    </bean>

	<bean id="defaultSpringSecurityContextSource" class="org.springframework.security.ldap.DefaultSpringSecurityContextSource">
    	<constructor-arg value="ldap://10.0.2.143:10389/o=mpowerOpen-dev"/>
	</bean>

    <bean id="mpowerAuthenticationProvider" class="com.mpower.security.MpowerAuthenticationProvider">
    	<constructor-arg ref="bindAuthenticator"/>
    	<constructor-arg ref="defaultLdapAuthoritiesPopulator"/>
        <sec:custom-authentication-provider/>
    </bean>

    <bean id="anonymousAuthenticationProvider" class="org.springframework.security.providers.anonymous.AnonymousAuthenticationProvider">
        <property name="key" value="anonymous"/>
    </bean>

	<bean id="ldapUserSearch" class="com.mpower.security.MpowerLdapUserSearch">
	  <constructor-arg index="0" value=""/>
	  <constructor-arg index="1" value="(uid={0})"/>
	  <constructor-arg index="2" ref="defaultSpringSecurityContextSource" />
	</bean>

	<bean id="bindAuthenticator" class="com.mpower.security.MpowerBindAuthenticator">
    	<constructor-arg ref="defaultSpringSecurityContextSource"/>
    	<property name="userSearch" ref="ldapUserSearch"/>
	</bean>

	<bean id="defaultLdapAuthoritiesPopulator" class="com.mpower.security.MpowerLdapAuthoritiesPopulator">
    	<constructor-arg ref="defaultSpringSecurityContextSource"/>
    	<constructor-arg value="ou=roles"/>
    	<property name="searchSubtree" value="true"/>
	</bean>

    <!-- This bean definition must be available to ApplicationContext.getBean() so StartupListener
         can look for it and detect if password encryption is turned on or not
	-->
    <bean id="passwordEncoder" class="org.springframework.security.providers.encoding.ShaPasswordEncoder"/>

    <!-- concurrent session filter -->
        <!--  having only one user at a time -->
    <bean id="concurrentSessionFilter" class="org.springframework.security.concurrent.ConcurrentSessionFilter">
      <property name="expiredUrl" value="/security/sessionExpire"/>
      <property name="sessionRegistry" ref="sessionRegistry"/>
    </bean>
    <bean id="concurrentSessionController" class="org.springframework.security.concurrent.ConcurrentSessionControllerImpl">
           <property name="maximumSessions" value="1"/>
           <property name="sessionRegistry" ref="sessionRegistry"/>
           <property name="exceptionIfMaximumExceeded" value="true"/>
    </bean>
    <bean id="sessionRegistry" class="org.springframework.security.concurrent.SessionRegistryImpl"/>
</beans>
