<?xml version="1.0" encoding="UTF-8"?>

<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-2.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-2.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-2.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-2.5.xsd">

	<bean id="appPropertyPlaceholderConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="order" value="1" />
		<property name="locations">
			<list>
				<value>classpath:tangerine.properties</value>
			</list>
		</property>
	</bean>

	<bean id="sysProps"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetClass"><value>java.lang.System</value></property>
		<property name="targetMethod"><value>getProperties</value></property>
	</bean>

	<bean id="serverUrl"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref local="sysProps" /></property>
		<property name="targetMethod"><value>setProperty</value></property>
		<property name="arguments">
			<list>
				<value>casClient.serverUrl</value>
				<value>${casClient.serverUrl}</value>
			</list>
		</property>
	</bean>

	<bean id="serviceUrl"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref local="sysProps" /></property>
		<property name="targetMethod"><value>setProperty</value></property>
		<property name="arguments">
			<list>
				<value>casClient.serviceUrl</value>
				<value>${casClient.serviceUrl}</value>
			</list>
		</property>
	</bean>

	<bean id="jasperHost"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref local="sysProps" /></property>
		<property name="targetMethod"><value>setProperty</value></property>
		<property name="arguments">
			<list>
				<value>jasper.host</value>
				<value>${jasper.host}</value>
			</list>
		</property>
	</bean>

	<bean id="jasperPort"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref local="sysProps" /></property>
		<property name="targetMethod"><value>setProperty</value></property>
		<property name="arguments">
			<list>
				<value>jasper.port</value>
				<value>${jasper.port}</value>
			</list>
		</property>
	</bean>

	<bean id="splitDatabases"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref local="sysProps" /></property>
		<property name="targetMethod"><value>setProperty</value></property>
		<property name="arguments">
			<list>
				<value>mysql.splitDatabases</value>
				<value>${mysql.splitDatabases}</value>
			</list>
		</property>
	</bean>

	<bean id="contextPrefix"
		class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
		<property name="targetObject"><ref local="sysProps" /></property>
		<property name="targetMethod"><value>setProperty</value></property>
		<property name="arguments">
			<list>
				<value>contextPrefix</value>
				<value>${contextPrefix}</value>
			</list>
		</property>
	</bean>

	<import resource="contexts/validator-context.xml"/>
	<import resource="contexts/quartz-context.xml"/>

	<context:component-scan base-package="com.orangeleap.tangerine">
		<context:exclude-filter type="annotation" expression="java.lang.Deprecated"/>
	</context:component-scan>

	<aop:aspectj-autoproxy />

	<tx:annotation-driven proxy-target-class="true"
		transaction-manager="transactionManager" />


    <!-- Load EHCache bean here, since it is needed by messageSource -->
    <bean id="cacheManager"
          class="org.springframework.cache.ehcache.EhCacheManagerFactoryBean"
          p:configLocation="classpath:ehcache.xml"/>

    <bean id="messageResourceCache"
          class="org.springframework.cache.ehcache.EhCacheFactoryBean"
          p:cacheManager-ref="cacheManager"
          p:cacheName="messageResourceCache"
          />

    <bean id="pageCustomizationCache"
          class="org.springframework.cache.ehcache.EhCacheFactoryBean"
          p:cacheManager-ref="cacheManager"
          p:cacheName="pageCustomizationCache"
          />

    <bean id="picklistCache"
          class="org.springframework.cache.ehcache.EhCacheFactoryBean"
          p:cacheManager-ref="cacheManager"
          p:cacheName="picklistCache"
          />

    <bean id="ruleGeneratedCodeCache"
          class="org.springframework.cache.ehcache.EhCacheFactoryBean"
          p:cacheManager-ref="cacheManager"
          p:cacheName="ruleGeneratedCodeCache"
          />

	<!--
	- The message source for this context, loaded from localized message files in the classpath (first) and then the database
	-->
    <bean id="messageSource" class="com.orangeleap.tangerine.controller.validator.TangerineMessageSource">
        <property name="messageService" ref="messageService"/>
        <property name="bundleMessageSource" ref="bundleMessageSource"/>
	</bean>

	<bean id="bundleMessageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
 		<property name="basename" value="tangerine-messages" />
		<property name="useCodeAsDefaultMessage" value="false" />
	</bean>

	<!-- this is not a bean, this is a static library initialization -->
	<bean id="tangerineMessageAccessor" class="com.orangeleap.tangerine.util.TangerineMessageAccessor" factory-method="setMessageSource">
		<constructor-arg>
			<ref local="bundleMessageSource"/>
		</constructor-arg>
	</bean>

	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource">
			<ref local="dataSource"/>
		</property>
	</bean>

	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:tangerine-sqlmap-config.xml"/>
		<property name="dataSource" ref="dataSource"/>
	</bean>

	<bean id="dataSource" class="com.orangeleap.tangerine.util.TangerineDataSource">
		<property name="dataSource" ref="dataSource-pooled" />
		<property name="tangerineUserHelper" ref="tangerineUserHelper" />
		<property name="splitDatabases" value="${mysql.splitDatabases}" />
	</bean>

	<bean id="dataSource-pooled" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
		<property name="driverClassName" value="com.mysql.jdbc.Driver"/>
        <property name="url" value="jdbc:mysql://${mysql.host}:${mysql.port}/orangeleap?autoReconnect=true&amp;useUnicode=true&amp;characterEncoding=UTF8"/>
		<property name="username" value="${mysql.user}"/>
		<property name="password" value="${mysql.password}"/>
		<property name="maxActive" value="100"/>
		<property name="maxIdle" value="30"/>
		<property name="maxWait" value="10000"/>
		<property name="defaultAutoCommit" value="false"/>

<!--		<property name="testOnBorrow"><value>true</value></property>-->
<!--		<property name="validationQuery"><value>select 1</value></property>-->
<!--		<property name="testWhileIdle"><value>true</value></property>-->
	</bean>

    <bean id="dataSource-pooled-jndi" class="org.springframework.jndi.JndiObjectFactoryBean">
		<property name="jndiName">
			<value>java:/comp/env/jdbc/MPowerOpen</value>
		</property>
	</bean>

	<bean id="tangerineUserHelper" class="com.orangeleap.tangerine.util.TangerineUserHelperImpl"/>
    <bean id="tableLogger" class="com.orangeleap.tangerine.util.TableLoggerImpl"/>

	<!--
		The following beans were created and used in the JMS/MOM poc shown
		during Iteration 6. These beans can be removed but are being left
		right now as an example of how to use Spring with JMS/MOM
	-->

<!-- 		<bean id="connectionFactory" class="org.apache.activemq.ActiveMQConnectionFactory">
			<property name="brokerURL" value="tcp://localhost:61616" />
		</bean>
		<bean	id="testDestination"	class="org.apache.activemq.command.ActiveMQQueue">
			<constructor-arg index="0" value="test.orangeleap.queue" />
		</bean>

		<bean id="jmsTemplate"	class="org.springframework.jms.core.JmsTemplate">
			<property	name="connectionFactory" ref="connectionFactory" />
			<property	name="defaultDestination" ref="testDestination" />
			<property	name="messageConverter" ref="giftConverter" />
		</bean>

		<bean	id="giftConverter"	class="com.orangeleap.tangerine.service.jms.GiftMessageConverter">
		</bean>

		<bean	id="creditGateway"	class="com.orangeleap.tangerine.service.jms.TangerineCreditGatewayImpl">
			<property	name="jmsTemplate" ref="jmsTemplate" />
		</bean>
-->
		<bean id="paymentGateway" class="com.orangeleap.tangerine.service.payments.OrbitalPaymentGateway">
			<property name="configFile" value="${paymentech.location}/config/linehandler.properties"/>
		</bean>

		<bean id="checkService" class="com.orangeleap.tangerine.service.impl.CheckServiceImpl">
		  <property name="url" value="http://www.echex.net/wsv/batch102.cfc"/>
		</bean>

		<bean id="achGateway" class="com.orangeleap.tangerine.service.payments.EchexPaymentGateway">
		  <property name="checkService" ref="checkService"/>
		</bean>

	<bean id="segmentationService" class="com.orangeleap.tangerine.service.segmentation.SegmentationService">
		<property name="baseUri" value="http://${jasper.host}:${jasper.port}/${contextPrefix}jasperserver"/>
		<property name="repositoryUri" value="/services/repository"/>
	</bean>

	<bean id="emailSendingService" class="com.orangeleap.tangerine.service.communication.EmailService">
		<property name="communicationHistoryService" ref="communicationHistoryService"/>
		<property name="baseUri" value="http://${jasper.host}:${jasper.port}/${contextPrefix}jasperserver"/>
		<property name="repositoryUri" value="/services/repository"/>
	</bean>

	<bean id="mailService" class="com.orangeleap.tangerine.service.communication.MailService">
		<property name="communicationHistoryService" ref="communicationHistoryService"/>
		<property name="constituentService" ref="constituentService"/>
		<property name="segmentationService" ref="segmentationService"/>
		<property name="baseUri" value="http://${jasper.host}:${jasper.port}/${contextPrefix}jasperserver"/>
		<property name="repositoryUri" value="/services/repository"/>
	</bean>


	<bean id="applicationContextProvider" class="com.orangeleap.tangerine.util.ApplicationContextProvider"/>
	
	<bean id="exporter" class="org.springframework.jmx.export.MBeanExporter">
    <property name="beans">
      <map>
        <entry key="OrangeLeap:name=OrangeLeapJmxNotification" value-ref="OrangeleapJmxNotificationBean"/>
      </map>
    </property>
    <property name="assembler">
      <bean class="org.springframework.jmx.export.assembler.InterfaceBasedMBeanInfoAssembler">
        <property name="managedInterfaces">
          <value>com.orangeleap.tangerine.service.OrangeleapJmxNotification</value>
        </property>
      </bean>
    </property>
  </bean>
	
	
</beans>