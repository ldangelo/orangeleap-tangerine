<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.4" xmlns="http://java.sun.com/xml/ns/j2ee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee
         http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">
         
   <!-- The following listener and context-param are used to bootstrap our
        Spring Application Contexts.  The web application context is loaded
        via the tangerine servlet defined below -->
   <listener>
      <listener-class> org.springframework.web.context.ContextLoaderListener</listener-class>
   </listener>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/applicationContext.xml,
			/WEB-INF/applicationContext-security.xml
			/WEB-INF/applicationContext-integration.xml
		</param-value>
	</context-param>

	<filter>
        <filter-name>saveRequestFilter</filter-name>
        <filter-class>com.orangeleap.common.security.SaveRequestFilter</filter-class>
    </filter>
	<filter>
		<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
	</filter>
	<filter>
        <filter-name>openSpringTransactionInView</filter-name>
        <filter-class>com.orangeleap.tangerine.web.filters.OpenSpringTransactionInViewFilter</filter-class>
    </filter>
    <filter>
        <filter-name>sitemesh</filter-name>
        <filter-class>com.opensymphony.module.sitemesh.filter.PageFilter</filter-class>
    </filter>
	<filter>
        <filter-name>cacheGroup</filter-name>
        <filter-class>com.orangeleap.tangerine.web.filters.CacheGroupFilter</filter-class>
    </filter>
	<filter>
		<filter-name>gzipFilter</filter-name>
		<filter-class>net.sf.ehcache.constructs.web.filter.GzipFilter</filter-class>
	</filter>
    <filter>
        <filter-name>tangerineUserCheckFilter</filter-name>
        <filter-class>com.orangeleap.tangerine.web.filters.TangerineUserCheckFilter</filter-class>
    </filter>

	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

	<filter-mapping>
		<filter-name>saveRequestFilter</filter-name>
		<url-pattern>/*</url-pattern>  
	</filter-mapping>

	<filter-mapping>
		<filter-name>openSpringTransactionInView</filter-name>
		<url-pattern>/*</url-pattern>  
	</filter-mapping>
	
	<filter-mapping>
		<filter-name>cacheGroup</filter-name>
		<url-pattern>/*</url-pattern>  
	</filter-mapping>
	
	<filter-mapping>
        <filter-name>gzipFilter</filter-name>
        <url-pattern>*.js</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
        <filter-name>gzipFilter</filter-name>
        <url-pattern>*.css</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
        <filter-name>gzipFilter</filter-name>
        <url-pattern>*.htm</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
        <filter-name>gzipFilter</filter-name>
        <url-pattern>*.jsp</url-pattern>
	</filter-mapping>
	
	<filter-mapping>
        <filter-name>gzipFilter</filter-name>
        <url-pattern>*.json</url-pattern>
	</filter-mapping>

    <!-- The tangerineUserCheckFilter !MUST! be last in the list of filters -->
    <filter-mapping>
        <filter-name>tangerineUserCheckFilter</filter-name>
        <url-pattern>*.htm</url-pattern>
    </filter-mapping>

	<filter-mapping>
        <filter-name>sitemesh</filter-name>
        <url-pattern>/*</url-pattern>
        <dispatcher>REQUEST</dispatcher>
        <dispatcher>FORWARD</dispatcher>
        <dispatcher>ERROR</dispatcher>
    </filter-mapping>

	<listener>
		<listener-class>org.springframework.security.ui.session.HttpSessionEventPublisher</listener-class>
	</listener>
	<listener>
        <listener-class>org.jasig.cas.client.session.SingleSignOutHttpSessionListener</listener-class>
    </listener>
	

   <!-- This servlet declaration is used as the Dispatcher Servlet (front 
        controller) in our Spring MVC framework and it also loads our web
        application context. -->
	<servlet>
		<servlet-name>orangeleap</servlet-name>
        <servlet-class> org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
		    <param-name>contextConfigLocation</param-name>
		    <param-value>/WEB-INF/applicationContext-servlet.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>

    <servlet>
        <servlet-name>json</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
		    <param-name>contextConfigLocation</param-name>
		    <param-value>/WEB-INF/applicationContext-json.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
    </servlet>

    <servlet>
        <servlet-name>spring-ws</servlet-name>
        <servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/contexts/webservice-context.xml</param-value>
        </init-param>
    </servlet>

    <servlet>
        <servlet-name>spring-ws-2.0</servlet-name>
        <servlet-class>org.springframework.ws.transport.http.MessageDispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/contexts/webservice2.0-context.xml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>spring-ws</servlet-name>
        <url-pattern>/services/*</url-pattern>
    </servlet-mapping>

	<servlet-mapping>
        <servlet-name>spring-ws</servlet-name>
        <url-pattern>/services/orangeleap.wsdl</url-pattern>
	</servlet-mapping>

    <servlet-mapping>
        <servlet-name>spring-ws-2.0</servlet-name>
        <url-pattern>/services2.0/*</url-pattern>
    </servlet-mapping>
    
	<servlet-mapping>
        <servlet-name>spring-ws-2.0</servlet-name>
        <url-pattern>/services2.0/orangeleap.wsdl</url-pattern>
	</servlet-mapping>

	<servlet-mapping>
		<servlet-name>orangeleap</servlet-name>
		<url-pattern>*.htm</url-pattern>
	</servlet-mapping>

    <servlet-mapping>
        <servlet-name>orangeleap</servlet-name>
        <url-pattern>/dwr/*</url-pattern>
    </servlet-mapping>

    <servlet-mapping>
        <servlet-name>json</servlet-name>
        <url-pattern>*.json</url-pattern>
    </servlet-mapping>

	<welcome-file-list>
		<welcome-file>index.jsp</welcome-file>
	</welcome-file-list>

	<resource-ref>
		<description>DB Connection</description>
		<res-ref-name>jdbc/MPowerOpen</res-ref-name>
		<res-type>javax.sql.DataSource</res-type>
		<res-auth>Container</res-auth>
	</resource-ref>

    <error-page>
        <error-code>500</error-code>
        <location>/WEB-INF/jsp/errors/error.jsp</location>
    </error-page>

    <error-page>
        <error-code>508</error-code>
        <location>/WEB-INF/jsp/errors/error.jsp</location>
    </error-page>

	<error-page>
		<error-code>403</error-code>
		<location>/WEB-INF/jsp/errors/403.jsp</location>
	</error-page>

    <error-page>
        <error-code>404</error-code>
        <location>/WEB-INF/jsp/errors/404.jsp</location>
    </error-page>
    
    
    <session-config>
	             <!-- 12 hours -->
      <session-timeout>720</session-timeout> 
    </session-config>

</web-app>